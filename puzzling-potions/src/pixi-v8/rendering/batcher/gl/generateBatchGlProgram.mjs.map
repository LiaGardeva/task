{"version":3,"file":"generateBatchGlProgram.mjs","sources":["../../../../src/rendering/batcher/gl/generateBatchGlProgram.ts"],"sourcesContent":["import { GlProgram } from '../../renderers/gl/shader/GlProgram';\n\nexport function generateBatchGlProgram({ vertexSrc, fragmentSrc, maxTextures, name }: {\n    vertexSrc: string;\n    fragmentSrc: string;\n    maxTextures: number;\n    name?: string;\n}): GlProgram\n{\n    if (fragmentSrc.indexOf('%count%') < 0)\n    {\n        throw new Error('Fragment template must contain \"%count%\".');\n    }\n\n    if (fragmentSrc.indexOf('%forloop%') < 0)\n    {\n        throw new Error('Fragment template must contain \"%forloop%\".');\n    }\n\n    const samplerSrc = generateSampleSrc(maxTextures);\n\n    fragmentSrc = fragmentSrc.replace(/%count%/gi, `${maxTextures}`);\n    fragmentSrc = fragmentSrc.replace(/%forloop%/gi, samplerSrc);\n\n    name = name ? `${name}-` : '';\n\n    const program = new GlProgram({ vertex: vertexSrc, fragment: fragmentSrc, name: `${name}batch` });\n\n    return program;\n}\n\nfunction generateSampleSrc(maxTextures: number): string\n{\n    const src = [];\n\n    for (let i = 0; i < maxTextures; i++)\n    {\n        if (i > 0)\n        {\n            src.push('else');\n        }\n\n        if (i < maxTextures - 1)\n        {\n            src.push(`if(vTextureId < ${i}.5)`);\n        }\n\n        src.push('{');\n        src.push(`\\toutColor = texture(uSamplers[${i}], vTextureCoord);`);\n        src.push('}');\n    }\n\n    return src.join('\\n');\n}\n"],"names":[],"mappings":";;AAEO,SAAS,uBAAuB,EAAE,SAAA,EAAW,WAAa,EAAA,WAAA,EAAa,MAM9E,EAAA;AACI,EAAA,IAAI,WAAY,CAAA,OAAA,CAAQ,SAAS,CAAA,GAAI,CACrC,EAAA;AACI,IAAM,MAAA,IAAI,MAAM,2CAA2C,CAAA,CAAA;AAAA,GAC/D;AAEA,EAAA,IAAI,WAAY,CAAA,OAAA,CAAQ,WAAW,CAAA,GAAI,CACvC,EAAA;AACI,IAAM,MAAA,IAAI,MAAM,6CAA6C,CAAA,CAAA;AAAA,GACjE;AAEA,EAAM,MAAA,UAAA,GAAa,kBAAkB,WAAW,CAAA,CAAA;AAEhD,EAAA,WAAA,GAAc,WAAY,CAAA,OAAA,CAAQ,WAAa,EAAA,CAAA,EAAG,WAAa,CAAA,CAAA,CAAA,CAAA;AAC/D,EAAc,WAAA,GAAA,WAAA,CAAY,OAAQ,CAAA,aAAA,EAAe,UAAU,CAAA,CAAA;AAE3D,EAAO,IAAA,GAAA,IAAA,GAAO,GAAG,IAAU,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA;AAE3B,EAAM,MAAA,OAAA,GAAU,IAAI,SAAA,CAAU,EAAE,MAAA,EAAQ,SAAW,EAAA,QAAA,EAAU,WAAa,EAAA,IAAA,EAAM,CAAG,EAAA,IAAA,CAAA,KAAA,CAAA,EAAa,CAAA,CAAA;AAEhG,EAAO,OAAA,OAAA,CAAA;AACX,CAAA;AAEA,SAAS,kBAAkB,WAC3B,EAAA;AACI,EAAA,MAAM,MAAM,EAAC,CAAA;AAEb,EAAA,KAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,WAAA,EAAa,CACjC,EAAA,EAAA;AACI,IAAA,IAAI,IAAI,CACR,EAAA;AACI,MAAA,GAAA,CAAI,KAAK,MAAM,CAAA,CAAA;AAAA,KACnB;AAEA,IAAI,IAAA,CAAA,GAAI,cAAc,CACtB,EAAA;AACI,MAAI,GAAA,CAAA,IAAA,CAAK,mBAAmB,CAAM,CAAA,GAAA,CAAA,CAAA,CAAA;AAAA,KACtC;AAEA,IAAA,GAAA,CAAI,KAAK,GAAG,CAAA,CAAA;AACZ,IAAI,GAAA,CAAA,IAAA,CAAK,iCAAkC,CAAqB,CAAA,kBAAA,CAAA,CAAA,CAAA;AAChE,IAAA,GAAA,CAAI,KAAK,GAAG,CAAA,CAAA;AAAA,GAChB;AAEA,EAAO,OAAA,GAAA,CAAI,KAAK,IAAI,CAAA,CAAA;AACxB;;;;"}