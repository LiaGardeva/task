{"version":3,"file":"MaskFilter.js","sources":["../../../../src/rendering/filters/mask/MaskFilter.ts"],"sourcesContent":["import { Matrix } from '../../../maths/Matrix';\nimport { GlProgram } from '../../renderers/gl/shader/GlProgram';\nimport { GpuProgram } from '../../renderers/gpu/shader/GpuProgram';\nimport { UniformGroup } from '../../renderers/shared/shader/UniformGroup';\nimport { TextureMatrix } from '../../renderers/shared/texture/TextureMatrix';\nimport { Filter } from '../Filter';\nimport fragment from './mask.frag';\nimport vertex from './mask.vert';\nimport source from './mask.wgsl';\n\nimport type { Texture } from '../../renderers/shared/texture/Texture';\nimport type { Sprite } from '../../sprite/shared/Sprite';\nimport type { FilterSystem } from '../shared/FilterSystem';\n\nexport interface MaskFilterOptions\n{\n    sprite: Sprite,\n    scale?: number | { x: number, y: number },\n}\n\nexport class MaskFilter extends Filter\n{\n    uniformGroup: UniformGroup;\n    sprite: Sprite;\n    textureMatrix: TextureMatrix;\n\n    constructor({ sprite }: MaskFilterOptions)\n    {\n        const textureMatrix = new TextureMatrix(sprite.texture);\n\n        const filterUniforms = new UniformGroup({\n            filterMatrix: { value: new Matrix(), type: 'mat3x3<f32>' },\n            maskClamp: { value: textureMatrix.uClampFrame, type: 'vec4<f32>' },\n            alpha: { value: 1, type: 'f32' },\n        });\n\n        const gpuProgram = new GpuProgram({\n            vertex: {\n                source,\n                entryPoint: 'mainVertex',\n            },\n            fragment: {\n                source,\n                entryPoint: 'mainFragment',\n            },\n        });\n\n        const glProgram = GlProgram.from({\n            vertex,\n            fragment,\n            name: 'mask-filter',\n        });\n\n        super({\n            gpuProgram,\n            glProgram,\n            resources: {\n                filterUniforms,\n                mapTexture: sprite.texture.source,\n            }\n        });\n\n        this.sprite = sprite;\n\n        this.textureMatrix = textureMatrix;\n    }\n\n    public apply(\n        filterManager: FilterSystem,\n        input: Texture,\n        output: Texture,\n        clearMode: boolean\n    ): void\n    {\n        // will trigger an update if the texture changed..\n        this.textureMatrix.texture = this.sprite.texture;\n\n        filterManager.calculateSpriteMatrix(\n            this.resources.filterUniforms.uniforms.filterMatrix as Matrix,\n            this.sprite\n        ).prepend(this.textureMatrix.mapCoord);\n\n        // this.uniformGroup.update();\n\n        this.resources.mapTexture = this.sprite.texture.source;\n\n        //   logDebugTexture(this.sprite.texture, filterManager.renderer);\n\n        filterManager.applyFilter(this, input, output, clearMode);\n    }\n}\n"],"names":["Filter","TextureMatrix","UniformGroup","Matrix","GpuProgram","source","GlProgram","vertex","fragment"],"mappings":";;;;;;;;;;;;;;AAoBO,MAAM,mBAAmBA,aAChC,CAAA;AAAA,EAKI,WAAA,CAAY,EAAE,MAAA,EACd,EAAA;AACI,IAAA,MAAM,aAAgB,GAAA,IAAIC,2BAAc,CAAA,MAAA,CAAO,OAAO,CAAA,CAAA;AAEtD,IAAM,MAAA,cAAA,GAAiB,IAAIC,yBAAa,CAAA;AAAA,MACpC,cAAc,EAAE,KAAA,EAAO,IAAIC,aAAO,EAAA,EAAG,MAAM,aAAc,EAAA;AAAA,MACzD,WAAW,EAAE,KAAA,EAAO,aAAc,CAAA,WAAA,EAAa,MAAM,WAAY,EAAA;AAAA,MACjE,KAAO,EAAA,EAAE,KAAO,EAAA,CAAA,EAAG,MAAM,KAAM,EAAA;AAAA,KAClC,CAAA,CAAA;AAED,IAAM,MAAA,UAAA,GAAa,IAAIC,qBAAW,CAAA;AAAA,MAC9B,MAAQ,EAAA;AAAA,gBACJC,eAAA;AAAA,QACA,UAAY,EAAA,YAAA;AAAA,OAChB;AAAA,MACA,QAAU,EAAA;AAAA,gBACNA,eAAA;AAAA,QACA,UAAY,EAAA,cAAA;AAAA,OAChB;AAAA,KACH,CAAA,CAAA;AAED,IAAM,MAAA,SAAA,GAAYC,oBAAU,IAAK,CAAA;AAAA,cAC7BC,iBAAA;AAAA,gBACAC,iBAAA;AAAA,MACA,IAAM,EAAA,aAAA;AAAA,KACT,CAAA,CAAA;AAED,IAAM,KAAA,CAAA;AAAA,MACF,UAAA;AAAA,MACA,SAAA;AAAA,MACA,SAAW,EAAA;AAAA,QACP,cAAA;AAAA,QACA,UAAA,EAAY,OAAO,OAAQ,CAAA,MAAA;AAAA,OAC/B;AAAA,KACH,CAAA,CAAA;AAED,IAAA,IAAA,CAAK,MAAS,GAAA,MAAA,CAAA;AAEd,IAAA,IAAA,CAAK,aAAgB,GAAA,aAAA,CAAA;AAAA,GACzB;AAAA,EAEO,KACH,CAAA,aAAA,EACA,KACA,EAAA,MAAA,EACA,SAEJ,EAAA;AAEI,IAAK,IAAA,CAAA,aAAA,CAAc,OAAU,GAAA,IAAA,CAAK,MAAO,CAAA,OAAA,CAAA;AAEzC,IAAc,aAAA,CAAA,qBAAA;AAAA,MACV,IAAA,CAAK,SAAU,CAAA,cAAA,CAAe,QAAS,CAAA,YAAA;AAAA,MACvC,IAAK,CAAA,MAAA;AAAA,KACP,CAAA,OAAA,CAAQ,IAAK,CAAA,aAAA,CAAc,QAAQ,CAAA,CAAA;AAIrC,IAAA,IAAA,CAAK,SAAU,CAAA,UAAA,GAAa,IAAK,CAAA,MAAA,CAAO,OAAQ,CAAA,MAAA,CAAA;AAIhD,IAAA,aAAA,CAAc,WAAY,CAAA,IAAA,EAAM,KAAO,EAAA,MAAA,EAAQ,SAAS,CAAA,CAAA;AAAA,GAC5D;AACJ;;;;"}