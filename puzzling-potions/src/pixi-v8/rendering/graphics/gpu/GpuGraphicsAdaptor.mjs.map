{"version":3,"file":"GpuGraphicsAdaptor.mjs","sources":["../../../../src/rendering/graphics/gpu/GpuGraphicsAdaptor.ts"],"sourcesContent":["import { ExtensionType } from '../../../extensions/Extensions';\nimport { Matrix } from '../../../maths/Matrix';\nimport { MAX_TEXTURES } from '../../batcher/shared/const';\nimport { BindGroup } from '../../renderers/gpu/shader/BindGroup';\nimport { Shader } from '../../renderers/shared/shader/Shader';\nimport { UniformGroup } from '../../renderers/shared/shader/UniformGroup';\nimport { color32BitToUniform } from './colorToUniform';\nimport { generateDefaultGraphicsBatchProgram } from './generateDefaultGraphicsBatchProgram';\n\nimport type { GpuEncoderSystem } from '../../renderers/gpu/GpuEncoderSystem';\nimport type { WebGPURenderer } from '../../renderers/gpu/WebGPURenderer';\nimport type { Renderable } from '../../renderers/shared/Renderable';\nimport type { GraphicsAdaptor, GraphicsPipe } from '../shared/GraphicsPipe';\nimport type { GraphicsView } from '../shared/GraphicsView';\n\nexport class GpuGraphicsAdaptor implements GraphicsAdaptor\n{\n    /** @ignore */\n    static extension = {\n        type: [\n            ExtensionType.WebGPUPipesAdaptor,\n        ],\n        name: 'graphics',\n    } as const;\n    shader: Shader;\n\n    init()\n    {\n        const localUniforms = new UniformGroup({\n            color: { value: new Float32Array([1, 1, 1, 1]), type: 'vec4<f32>' },\n            transformMatrix: { value: new Matrix(), type: 'mat3x3<f32>' },\n        });\n\n        this.shader = new Shader({\n            gpuProgram: generateDefaultGraphicsBatchProgram(MAX_TEXTURES),\n            groups: {\n                // added on the fly!\n                2: new BindGroup({ 0: localUniforms }),\n            },\n        });\n    }\n\n    execute(graphicsPipe: GraphicsPipe, renderable: Renderable<GraphicsView>): void\n    {\n        const context = renderable.view.context;\n        const shader = context.customShader || this.shader;\n        const renderer = graphicsPipe.renderer as WebGPURenderer;\n        const contextSystem = renderer.graphicsContext;\n\n        // early out if there is no actual visual stuff...\n        if (!contextSystem.getGpuContext(context).batches.length)\n        { return; }\n\n        const {\n            geometry, batches\n        } = contextSystem.getContextRenderData(context);\n\n        graphicsPipe.state.blendMode = renderable.layerBlendMode;\n\n        const localUniforms = shader.resources.localUniforms;\n\n        shader.resources.localUniforms.uniforms.transformMatrix = renderable.layerTransform;\n\n        color32BitToUniform(\n            renderable.layerColor,\n            localUniforms.uniforms.color,\n            0\n        );\n\n        // WebGPU specific...\n\n        // TODO perf test this a bit...\n        const encoder = renderer.encoder as GpuEncoderSystem;\n\n        encoder.setPipelineFromGeometryProgramAndState(\n            geometry,\n            shader.gpuProgram,\n            graphicsPipe.state\n        );\n\n        encoder.setGeometry(geometry);\n\n        const globalUniformsBindGroup = renderer.globalUniforms.bindGroup;\n\n        encoder.setBindGroup(0, globalUniformsBindGroup, shader.gpuProgram);\n\n        const localBindGroup = (renderer as WebGPURenderer)\n            .renderPipes.uniformBatch.getUniformBindGroup(localUniforms, true);\n\n        encoder.setBindGroup(2, localBindGroup, shader.gpuProgram);\n\n        for (let i = 0; i < batches.length; i++)\n        {\n            const batch = batches[i];\n\n            shader.groups[1] = batch.textures.bindGroup;\n\n            encoder.setBindGroup(1, batch.textures.bindGroup, shader.gpuProgram);\n\n            encoder.renderPassEncoder.drawIndexed(batch.size, 1, batch.start);\n        }\n    }\n\n    destroy(): void\n    {\n        this.shader.destroy(true);\n        this.shader = null;\n    }\n}\n"],"names":[],"mappings":"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"}