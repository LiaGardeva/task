{"version":3,"file":"GraphicsView.js","sources":["../../../../src/rendering/graphics/shared/GraphicsView.ts"],"sourcesContent":["import { emptyViewObserver } from '../../renderers/shared/View';\nimport { GraphicsContext } from './GraphicsContext';\n\nimport type { PointData } from '../../../maths/PointData';\nimport type { View } from '../../renderers/shared/View';\nimport type { Bounds } from '../../scene/bounds/Bounds';\nimport type { ContextDestroyOptions, TextureDestroyOptions, TypeOrBool } from '../../scene/destroyTypes';\n\nlet UID = 0;\n\nexport class GraphicsView implements View\n{\n    uid = UID++;\n\n    canBundle = true;\n\n    owner = emptyViewObserver;\n\n    batched: boolean;\n    type = 'graphics';\n\n    didUpdate: boolean;\n\n    private _context: GraphicsContext;\n\n    constructor(graphicsContext?: GraphicsContext)\n    {\n        this._context = graphicsContext || new GraphicsContext();\n        this._context.on('update', this.onGraphicsContextUpdate, this);\n    }\n\n    set context(context: GraphicsContext)\n    {\n        if (context === this._context) return;\n\n        this._context.off('update', this.onGraphicsContextUpdate, this);\n\n        this._context = context;\n\n        // TODO store this bound function somewhere else..\n        this._context.on('update', this.onGraphicsContextUpdate, this);\n\n        this.onGraphicsContextUpdate();\n    }\n\n    get context(): GraphicsContext\n    {\n        return this._context;\n    }\n\n    addBounds(bounds: Bounds)\n    {\n        bounds.addBounds(this._context.bounds);\n    }\n\n    public containsPoint(point: PointData)\n    {\n        return this._context.containsPoint(point);\n    }\n\n    protected onGraphicsContextUpdate()\n    {\n        this.didUpdate = true;\n        this.owner.onViewUpdate();\n    }\n\n    /**\n     * Destroys this graphics renderable and optionally its context.\n     * @param options - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.texture=false] - Should destroy the texture of the graphics context\n     * @param {boolean} [options.textureSource=false] - Should destroy the texture source of the graphics context\n     * @param {boolean} [options.context=false] - Should destroy the context\n     */\n    public destroy(options: TypeOrBool<TextureDestroyOptions & ContextDestroyOptions> = false): void\n    {\n        this.owner = null;\n\n        const destroyContext = typeof options === 'boolean' ? options : options?.context;\n\n        if (destroyContext)\n        {\n            this._context.destroy(options);\n        }\n\n        this._context = null;\n    }\n}\n"],"names":["emptyViewObserver","GraphicsContext"],"mappings":";;;;;;;AAQA,IAAI,GAAM,GAAA,CAAA,CAAA;AAEH,MAAM,YACb,CAAA;AAAA,EAcI,YAAY,eACZ,EAAA;AAdA,IAAM,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,CAAA;AAEN,IAAY,IAAA,CAAA,SAAA,GAAA,IAAA,CAAA;AAEZ,IAAQ,IAAA,CAAA,KAAA,GAAAA,sBAAA,CAAA;AAGR,IAAO,IAAA,CAAA,IAAA,GAAA,UAAA,CAAA;AAQH,IAAK,IAAA,CAAA,QAAA,GAAW,eAAmB,IAAA,IAAIC,+BAAgB,EAAA,CAAA;AACvD,IAAA,IAAA,CAAK,QAAS,CAAA,EAAA,CAAG,QAAU,EAAA,IAAA,CAAK,yBAAyB,IAAI,CAAA,CAAA;AAAA,GACjE;AAAA,EAEA,IAAI,QAAQ,OACZ,EAAA;AACI,IAAA,IAAI,YAAY,IAAK,CAAA,QAAA;AAAU,MAAA,OAAA;AAE/B,IAAA,IAAA,CAAK,QAAS,CAAA,GAAA,CAAI,QAAU,EAAA,IAAA,CAAK,yBAAyB,IAAI,CAAA,CAAA;AAE9D,IAAA,IAAA,CAAK,QAAW,GAAA,OAAA,CAAA;AAGhB,IAAA,IAAA,CAAK,QAAS,CAAA,EAAA,CAAG,QAAU,EAAA,IAAA,CAAK,yBAAyB,IAAI,CAAA,CAAA;AAE7D,IAAA,IAAA,CAAK,uBAAwB,EAAA,CAAA;AAAA,GACjC;AAAA,EAEA,IAAI,OACJ,GAAA;AACI,IAAA,OAAO,IAAK,CAAA,QAAA,CAAA;AAAA,GAChB;AAAA,EAEA,UAAU,MACV,EAAA;AACI,IAAO,MAAA,CAAA,SAAA,CAAU,IAAK,CAAA,QAAA,CAAS,MAAM,CAAA,CAAA;AAAA,GACzC;AAAA,EAEO,cAAc,KACrB,EAAA;AACI,IAAO,OAAA,IAAA,CAAK,QAAS,CAAA,aAAA,CAAc,KAAK,CAAA,CAAA;AAAA,GAC5C;AAAA,EAEU,uBACV,GAAA;AACI,IAAA,IAAA,CAAK,SAAY,GAAA,IAAA,CAAA;AACjB,IAAA,IAAA,CAAK,MAAM,YAAa,EAAA,CAAA;AAAA,GAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUO,OAAA,CAAQ,UAAqE,KACpF,EAAA;AACI,IAAA,IAAA,CAAK,KAAQ,GAAA,IAAA,CAAA;AAEb,IAAA,MAAM,cAAiB,GAAA,OAAO,OAAY,KAAA,SAAA,GAAY,UAAU,OAAS,EAAA,OAAA,CAAA;AAEzE,IAAA,IAAI,cACJ,EAAA;AACI,MAAK,IAAA,CAAA,QAAA,CAAS,QAAQ,OAAO,CAAA,CAAA;AAAA,KACjC;AAEA,IAAA,IAAA,CAAK,QAAW,GAAA,IAAA,CAAA;AAAA,GACpB;AACJ;;;;"}