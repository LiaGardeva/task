{"version":3,"file":"FillPattern.js","sources":["../../../../../src/rendering/graphics/shared/fill/FillPattern.ts"],"sourcesContent":["import { Matrix } from '../../../../maths/Matrix';\n\nimport type { WRAP_MODE } from '../../../renderers/shared/texture/const';\nimport type { Texture } from '../../../renderers/shared/texture/Texture';\n\nexport type PatternRepetition = 'repeat' | 'repeat-x' | 'repeat-y' | 'no-repeat';\n\nconst repetitionMap = {\n    repeat: {\n        addressModeU: 'repeat',\n        addressModeV: 'repeat',\n    },\n    'repeat-x': {\n        addressModeU: 'repeat',\n        addressModeV: 'clamp-to-edge',\n    },\n    'repeat-y': {\n        addressModeU: 'clamp-to-edge',\n        addressModeV: 'repeat',\n    },\n    'no-repeat': {\n        addressModeU: 'clamp-to-edge',\n        addressModeV: 'clamp-to-edge',\n    },\n};\n\nlet UID = 0;\n\nexport class FillPattern implements CanvasPattern\n{\n    readonly uid = UID++;\n    texture: Texture;\n    repetition: string;\n    transform = new Matrix();\n\n    constructor(texture: Texture, repetition?: PatternRepetition)\n    {\n        this.texture = texture;\n        this.repetition = repetition;\n\n        this.transform.scale(\n            1 / texture.frameWidth,\n            1 / texture.frameHeight\n        );\n\n        if (repetition)\n        {\n            texture.style.addressModeU = repetitionMap[repetition].addressModeU as WRAP_MODE;\n            texture.style.addressModeV = repetitionMap[repetition].addressModeV as WRAP_MODE;\n        }\n    }\n\n    setTransform(transform?: Matrix): void\n    {\n        const texture = this.texture;\n\n        this.transform.copyFrom(transform);\n        this.transform.invert();\n        //  transform.scale\n        this.transform.scale(\n            1 / texture.frameWidth,\n            1 / texture.frameHeight\n        );\n    }\n}\n"],"names":["Matrix"],"mappings":";;;;;;AAOA,MAAM,aAAgB,GAAA;AAAA,EAClB,MAAQ,EAAA;AAAA,IACJ,YAAc,EAAA,QAAA;AAAA,IACd,YAAc,EAAA,QAAA;AAAA,GAClB;AAAA,EACA,UAAY,EAAA;AAAA,IACR,YAAc,EAAA,QAAA;AAAA,IACd,YAAc,EAAA,eAAA;AAAA,GAClB;AAAA,EACA,UAAY,EAAA;AAAA,IACR,YAAc,EAAA,eAAA;AAAA,IACd,YAAc,EAAA,QAAA;AAAA,GAClB;AAAA,EACA,WAAa,EAAA;AAAA,IACT,YAAc,EAAA,eAAA;AAAA,IACd,YAAc,EAAA,eAAA;AAAA,GAClB;AACJ,CAAA,CAAA;AAEA,IAAI,GAAM,GAAA,CAAA,CAAA;AAEH,MAAM,WACb,CAAA;AAAA,EAMI,WAAA,CAAY,SAAkB,UAC9B,EAAA;AANA,IAAA,IAAA,CAAS,GAAM,GAAA,GAAA,EAAA,CAAA;AAGf,IAAA,IAAA,CAAA,SAAA,GAAY,IAAIA,aAAO,EAAA,CAAA;AAInB,IAAA,IAAA,CAAK,OAAU,GAAA,OAAA,CAAA;AACf,IAAA,IAAA,CAAK,UAAa,GAAA,UAAA,CAAA;AAElB,IAAA,IAAA,CAAK,SAAU,CAAA,KAAA;AAAA,MACX,IAAI,OAAQ,CAAA,UAAA;AAAA,MACZ,IAAI,OAAQ,CAAA,WAAA;AAAA,KAChB,CAAA;AAEA,IAAA,IAAI,UACJ,EAAA;AACI,MAAA,OAAA,CAAQ,KAAM,CAAA,YAAA,GAAe,aAAc,CAAA,UAAU,CAAE,CAAA,YAAA,CAAA;AACvD,MAAA,OAAA,CAAQ,KAAM,CAAA,YAAA,GAAe,aAAc,CAAA,UAAU,CAAE,CAAA,YAAA,CAAA;AAAA,KAC3D;AAAA,GACJ;AAAA,EAEA,aAAa,SACb,EAAA;AACI,IAAA,MAAM,UAAU,IAAK,CAAA,OAAA,CAAA;AAErB,IAAK,IAAA,CAAA,SAAA,CAAU,SAAS,SAAS,CAAA,CAAA;AACjC,IAAA,IAAA,CAAK,UAAU,MAAO,EAAA,CAAA;AAEtB,IAAA,IAAA,CAAK,SAAU,CAAA,KAAA;AAAA,MACX,IAAI,OAAQ,CAAA,UAAA;AAAA,MACZ,IAAI,OAAQ,CAAA,WAAA;AAAA,KAChB,CAAA;AAAA,GACJ;AACJ;;;;"}