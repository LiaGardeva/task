{"version":3,"file":"ColorMaskPipe.mjs","sources":["../../../../src/rendering/mask/shared/ColorMaskPipe.ts"],"sourcesContent":["import { ExtensionType } from '../../../extensions/Extensions';\n\nimport type { Instruction } from '../../renderers/shared/instructions/Instruction';\nimport type { InstructionSet } from '../../renderers/shared/instructions/InstructionSet';\nimport type { InstructionPipe } from '../../renderers/shared/instructions/RenderPipe';\nimport type { Renderer } from '../../renderers/types';\nimport type { Container } from '../../scene/Container';\nimport type { ColorMask } from './ColorMask';\n\nexport interface ColorMaskInstruction extends Instruction\n{\n    type: 'colorMask',\n    colorMask: number,\n}\n\nexport class ColorMaskPipe implements InstructionPipe<ColorMaskInstruction>\n{\n    /** @ignore */\n    static extension = {\n        type: [\n            ExtensionType.WebGLPipes,\n            ExtensionType.WebGPUPipes,\n            ExtensionType.CanvasPipes,\n        ],\n        name: 'colorMask',\n    } as const;\n\n    private renderer: Renderer;\n    private colorStack: number[] = [];\n    private colorStackIndex = 0;\n    private currentColor = 0;\n\n    constructor(renderer: Renderer)\n    {\n        this.renderer = renderer;\n    }\n\n    buildStart()\n    {\n        this.colorStack[0] = 0xF;\n        this.colorStackIndex = 1;\n        this.currentColor = 0xF;\n    }\n\n    push(mask: ColorMask, _container: Container, instructionSet: InstructionSet): void\n    {\n        const renderer = this.renderer;\n\n        renderer.renderPipes.batch.break(instructionSet);\n\n        const colorStack = this.colorStack;\n\n        colorStack[this.colorStackIndex] = colorStack[this.colorStackIndex - 1] & mask.mask;\n\n        const currentColor = this.colorStack[this.colorStackIndex];\n\n        if (currentColor !== this.currentColor)\n        {\n            this.currentColor = currentColor;\n            instructionSet.add({\n                type: 'colorMask',\n                colorMask: currentColor,\n                canBundle: false,\n            } as ColorMaskInstruction);\n        }\n\n        this.colorStackIndex++;\n    }\n\n    pop(_mask: ColorMask, _container: Container, instructionSet: InstructionSet): void\n    {\n        const renderer = this.renderer;\n\n        renderer.renderPipes.batch.break(instructionSet);\n\n        const colorStack = this.colorStack;\n\n        this.colorStackIndex--;\n\n        const currentColor = colorStack[this.colorStackIndex - 1];\n\n        if (currentColor !== this.currentColor)\n        {\n            this.currentColor = currentColor;\n\n            instructionSet.add({\n                type: 'colorMask',\n                colorMask: currentColor,\n                canBundle: false,\n            } as ColorMaskInstruction);\n        }\n    }\n\n    execute(instruction: ColorMaskInstruction)\n    {\n        const renderer = this.renderer;\n\n        renderer.colorMask.setMask(instruction.colorMask);\n    }\n\n    destroy()\n    {\n        this.colorStack = null;\n    }\n}\n"],"names":[],"mappings":";;AAeO,MAAM,aACb,CAAA;AAAA,EAgBI,YAAY,QACZ,EAAA;AALA,IAAA,IAAA,CAAQ,aAAuB,EAAC,CAAA;AAChC,IAAA,IAAA,CAAQ,eAAkB,GAAA,CAAA,CAAA;AAC1B,IAAA,IAAA,CAAQ,YAAe,GAAA,CAAA,CAAA;AAInB,IAAA,IAAA,CAAK,QAAW,GAAA,QAAA,CAAA;AAAA,GACpB;AAAA,EAEA,UACA,GAAA;AACI,IAAK,IAAA,CAAA,UAAA,CAAW,CAAC,CAAI,GAAA,EAAA,CAAA;AACrB,IAAA,IAAA,CAAK,eAAkB,GAAA,CAAA,CAAA;AACvB,IAAA,IAAA,CAAK,YAAe,GAAA,EAAA,CAAA;AAAA,GACxB;AAAA,EAEA,IAAA,CAAK,IAAiB,EAAA,UAAA,EAAuB,cAC7C,EAAA;AACI,IAAA,MAAM,WAAW,IAAK,CAAA,QAAA,CAAA;AAEtB,IAAS,QAAA,CAAA,WAAA,CAAY,KAAM,CAAA,KAAA,CAAM,cAAc,CAAA,CAAA;AAE/C,IAAA,MAAM,aAAa,IAAK,CAAA,UAAA,CAAA;AAExB,IAAW,UAAA,CAAA,IAAA,CAAK,eAAe,CAAI,GAAA,UAAA,CAAW,KAAK,eAAkB,GAAA,CAAC,IAAI,IAAK,CAAA,IAAA,CAAA;AAE/E,IAAA,MAAM,YAAe,GAAA,IAAA,CAAK,UAAW,CAAA,IAAA,CAAK,eAAe,CAAA,CAAA;AAEzD,IAAI,IAAA,YAAA,KAAiB,KAAK,YAC1B,EAAA;AACI,MAAA,IAAA,CAAK,YAAe,GAAA,YAAA,CAAA;AACpB,MAAA,cAAA,CAAe,GAAI,CAAA;AAAA,QACf,IAAM,EAAA,WAAA;AAAA,QACN,SAAW,EAAA,YAAA;AAAA,QACX,SAAW,EAAA,KAAA;AAAA,OACU,CAAA,CAAA;AAAA,KAC7B;AAEA,IAAK,IAAA,CAAA,eAAA,EAAA,CAAA;AAAA,GACT;AAAA,EAEA,GAAA,CAAI,KAAkB,EAAA,UAAA,EAAuB,cAC7C,EAAA;AACI,IAAA,MAAM,WAAW,IAAK,CAAA,QAAA,CAAA;AAEtB,IAAS,QAAA,CAAA,WAAA,CAAY,KAAM,CAAA,KAAA,CAAM,cAAc,CAAA,CAAA;AAE/C,IAAA,MAAM,aAAa,IAAK,CAAA,UAAA,CAAA;AAExB,IAAK,IAAA,CAAA,eAAA,EAAA,CAAA;AAEL,IAAA,MAAM,YAAe,GAAA,UAAA,CAAW,IAAK,CAAA,eAAA,GAAkB,CAAC,CAAA,CAAA;AAExD,IAAI,IAAA,YAAA,KAAiB,KAAK,YAC1B,EAAA;AACI,MAAA,IAAA,CAAK,YAAe,GAAA,YAAA,CAAA;AAEpB,MAAA,cAAA,CAAe,GAAI,CAAA;AAAA,QACf,IAAM,EAAA,WAAA;AAAA,QACN,SAAW,EAAA,YAAA;AAAA,QACX,SAAW,EAAA,KAAA;AAAA,OACU,CAAA,CAAA;AAAA,KAC7B;AAAA,GACJ;AAAA,EAEA,QAAQ,WACR,EAAA;AACI,IAAA,MAAM,WAAW,IAAK,CAAA,QAAA,CAAA;AAEtB,IAAS,QAAA,CAAA,SAAA,CAAU,OAAQ,CAAA,WAAA,CAAY,SAAS,CAAA,CAAA;AAAA,GACpD;AAAA,EAEA,OACA,GAAA;AACI,IAAA,IAAA,CAAK,UAAa,GAAA,IAAA,CAAA;AAAA,GACtB;AACJ,CAAA;AAAA;AAzFa,aAAA,CAGF,SAAY,GAAA;AAAA,EACf,IAAM,EAAA;AAAA,IACF,aAAc,CAAA,UAAA;AAAA,IACd,aAAc,CAAA,WAAA;AAAA,IACd,aAAc,CAAA,WAAA;AAAA,GAClB;AAAA,EACA,IAAM,EAAA,WAAA;AACV,CAAA;;;;"}