{"version":3,"file":"GpuMeshAdapter.mjs","sources":["../../../../src/rendering/mesh/gpu/GpuMeshAdapter.ts"],"sourcesContent":["import { ExtensionType } from '../../../extensions/Extensions';\nimport { color32BitToUniform } from '../../graphics/gpu/colorToUniform';\n\nimport type { WebGPURenderer } from '../../renderers/gpu/WebGPURenderer';\nimport type { Renderable } from '../../renderers/shared/Renderable';\nimport type { MeshAdaptor, MeshPipe } from '../shared/MeshPipe';\nimport type { MeshView } from '../shared/MeshView';\n\nexport class GpuMeshAdapter implements MeshAdaptor\n{\n    /** @ignore */\n    static extension = {\n        type: [\n            ExtensionType.WebGPUPipesAdaptor,\n        ],\n        name: 'mesh',\n    } as const;\n\n    execute(meshPipe: MeshPipe, renderable: Renderable<MeshView>)\n    {\n        const renderer = meshPipe.renderer;\n        const view = renderable.view;\n\n        const state = meshPipe.state;\n\n        state.blendMode = renderable.layerBlendMode;\n\n        const localUniforms = meshPipe.localUniforms;\n\n        localUniforms.uniforms.transformMatrix = renderable.layerTransform;\n        localUniforms.update();\n\n        color32BitToUniform(\n            renderable.layerColor,\n            localUniforms.uniforms.color,\n            0\n        );\n\n        let shader = view._shader;\n\n        if (!shader)\n        {\n            shader = meshPipe.meshShader;\n\n            shader.groups[2] = (renderer as WebGPURenderer)\n                .texture.getTextureBindGroup(view.texture);\n        }\n\n        // GPU..\n        shader.groups[0] = renderer.globalUniforms.bindGroup;\n\n        shader.groups[1] = (renderer as WebGPURenderer)\n            .renderPipes.uniformBatch.getUniformBindGroup(localUniforms, true);\n\n        renderer.encoder.draw({\n            geometry: view._geometry,\n            shader,\n            state\n        });\n    }\n}\n"],"names":[],"mappings":";;;AAQO,MAAM,cACb,CAAA;AAAA,EASI,OAAA,CAAQ,UAAoB,UAC5B,EAAA;AACI,IAAA,MAAM,WAAW,QAAS,CAAA,QAAA,CAAA;AAC1B,IAAA,MAAM,OAAO,UAAW,CAAA,IAAA,CAAA;AAExB,IAAA,MAAM,QAAQ,QAAS,CAAA,KAAA,CAAA;AAEvB,IAAA,KAAA,CAAM,YAAY,UAAW,CAAA,cAAA,CAAA;AAE7B,IAAA,MAAM,gBAAgB,QAAS,CAAA,aAAA,CAAA;AAE/B,IAAc,aAAA,CAAA,QAAA,CAAS,kBAAkB,UAAW,CAAA,cAAA,CAAA;AACpD,IAAA,aAAA,CAAc,MAAO,EAAA,CAAA;AAErB,IAAA,mBAAA;AAAA,MACI,UAAW,CAAA,UAAA;AAAA,MACX,cAAc,QAAS,CAAA,KAAA;AAAA,MACvB,CAAA;AAAA,KACJ,CAAA;AAEA,IAAA,IAAI,SAAS,IAAK,CAAA,OAAA,CAAA;AAElB,IAAA,IAAI,CAAC,MACL,EAAA;AACI,MAAA,MAAA,GAAS,QAAS,CAAA,UAAA,CAAA;AAElB,MAAA,MAAA,CAAO,OAAO,CAAC,CAAA,GAAK,SACf,OAAQ,CAAA,mBAAA,CAAoB,KAAK,OAAO,CAAA,CAAA;AAAA,KACjD;AAGA,IAAA,MAAA,CAAO,MAAO,CAAA,CAAC,CAAI,GAAA,QAAA,CAAS,cAAe,CAAA,SAAA,CAAA;AAE3C,IAAO,MAAA,CAAA,MAAA,CAAO,CAAC,CAAK,GAAA,QAAA,CACf,YAAY,YAAa,CAAA,mBAAA,CAAoB,eAAe,IAAI,CAAA,CAAA;AAErE,IAAA,QAAA,CAAS,QAAQ,IAAK,CAAA;AAAA,MAClB,UAAU,IAAK,CAAA,SAAA;AAAA,MACf,MAAA;AAAA,MACA,KAAA;AAAA,KACH,CAAA,CAAA;AAAA,GACL;AACJ,CAAA;AAAA;AApDa,cAAA,CAGF,SAAY,GAAA;AAAA,EACf,IAAM,EAAA;AAAA,IACF,aAAc,CAAA,kBAAA;AAAA,GAClB;AAAA,EACA,IAAM,EAAA,MAAA;AACV,CAAA;;;;"}