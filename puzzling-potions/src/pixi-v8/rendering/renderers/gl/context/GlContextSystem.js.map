{"version":3,"file":"GlContextSystem.js","sources":["../../../../../src/rendering/renderers/gl/context/GlContextSystem.ts"],"sourcesContent":["import { ExtensionType } from '../../../../extensions/Extensions';\n\nimport type { ICanvas } from '../../../../settings/adapter/ICanvas';\nimport type { System } from '../../shared/system/System';\nimport type { WebGLRenderer } from '../WebGLRenderer';\nimport type { GlRenderingContext } from './GlRenderingContext';\nimport type { WebGLExtensions } from './WebGLExtensions';\n\nexport interface ISupportDict\n{\n    uint32Indices: boolean;\n}\n\n/**\n * Options for the context system.\n * @ignore\n */\nexport interface ContextSystemOptions\n{\n    /**\n     * **WebGL Only.** User-provided WebGL rendering context object.\n     * @memberof PIXI.WebGLOptions\n     */\n    context: WebGL2RenderingContext | null;\n    /**\n     * **WebGL Only.** A hint indicating what configuration of GPU is suitable for the WebGL context,\n     * can be `'default'`, `'high-performance'` or `'low-power'`.\n     * Setting to `'high-performance'` will prioritize rendering performance over power consumption,\n     * while setting to `'low-power'` will prioritize power saving over rendering performance.\n     * @memberof PIXI.WebGLOptions\n     */\n    powerPreference: WebGLPowerPreference;\n    /**\n     * **WebGL Only.** Whether the compositor will assume the drawing buffer contains colors with premultiplied alpha.\n     * @memberof PIXI.WebGLOptions\n     */\n    premultipliedAlpha: boolean;\n    /**\n     * **WebGL Only.** Whether to enable drawing buffer preservation. If enabled, the drawing buffer will preserve\n     * its value until cleared or overwritten. Enable this if you need to call `toDataUrl` on the WebGL context.\n     * @memberof PIXI.WebGLOptions\n     */\n    preserveDrawingBuffer: boolean;\n\n    antialias?: boolean;\n}\n\n/**\n * System plugin to the renderer to manage the context.\n * @memberof PIXI\n */\nexport class GlContextSystem implements System<ContextSystemOptions>\n{\n    /** @ignore */\n    static extension = {\n        type: [\n            ExtensionType.WebGLSystem,\n        ],\n        name: 'context',\n    } as const;\n\n    /** @ignore */\n    static defaultOptions: ContextSystemOptions = {\n        /**\n         * {@link PIXI.WebGLOptions.context}\n         * @default null\n         */\n        context: null,\n        /**\n         * {@link PIXI.WebGLOptions.premultipliedAlpha}\n         * @default true\n         */\n        premultipliedAlpha: true,\n        /**\n         * {@link PIXI.WebGLOptions.preserveDrawingBuffer}\n         * @default false\n         */\n        preserveDrawingBuffer: false,\n        /**\n         * {@link PIXI.WebGLOptions.powerPreference}\n         * @default default\n         */\n        powerPreference: 'default',\n    };\n\n    /**\n     * Either 1 or 2 to reflect the WebGL version being used.\n     * @readonly\n     */\n    public webGLVersion: number;\n\n    /**\n     * Features supported by current context.\n     * @type {object}\n     * @readonly\n     * @property {boolean} uint32Indices - Support for 32-bit indices buffer.\n     */\n    readonly supports: ISupportDict;\n\n    preserveDrawingBuffer: boolean;\n    powerPreference: WebGLPowerPreference;\n\n    protected CONTEXT_UID: number;\n    protected gl: WebGL2RenderingContext;\n\n    /**\n     * Extensions available.\n     * @type {object}\n     * @readonly\n     * @property {WEBGL_draw_buffers} drawBuffers - WebGL v1 extension\n     * @property {WEBGL_depth_texture} depthTexture - WebGL v1 extension\n     * @property {OES_texture_float} floatTexture - WebGL v1 extension\n     * @property {WEBGL_lose_context} loseContext - WebGL v1 extension\n     * @property {OES_vertex_array_object} vertexArrayObject - WebGL v1 extension\n     * @property {EXT_texture_filter_anisotropic} anisotropicFiltering - WebGL v1 and v2 extension\n     */\n    public extensions: WebGLExtensions;\n\n    private renderer: WebGLRenderer;\n\n    /** @param renderer - The renderer this System works for. */\n    constructor(renderer: WebGLRenderer)\n    {\n        this.renderer = renderer;\n\n        this.webGLVersion = 1;\n        this.extensions = {};\n\n        this.supports = {\n            uint32Indices: false,\n        };\n\n        // Bind functions\n        this.handleContextLost = this.handleContextLost.bind(this);\n        this.handleContextRestored = this.handleContextRestored.bind(this);\n    }\n\n    /**\n     * `true` if the context is lost\n     * @readonly\n     */\n    get isLost(): boolean\n    {\n        return (!this.gl || this.gl.isContextLost());\n    }\n\n    /**\n     * Handles the context change event.\n     * @param {WebGLRenderingContext} gl - New WebGL context.\n     */\n    protected contextChange(gl: WebGL2RenderingContext): void\n    {\n        this.gl = gl;\n        this.renderer.gl = gl;\n\n        // restore a context if it was previously lost\n        if (gl.isContextLost() && gl.getExtension('WEBGL_lose_context'))\n        {\n            gl.getExtension('WEBGL_lose_context').restoreContext();\n        }\n    }\n\n    init(options: ContextSystemOptions): void\n    {\n        /*\n         * The options passed in to create a new WebGL context.\n         */\n        if (options?.context)\n        {\n            this.initFromContext(options.context);\n        }\n        else\n        {\n            const alpha = this.renderer.background.alpha < 1;\n            const premultipliedAlpha = options.premultipliedAlpha ?? true;\n\n            this.preserveDrawingBuffer = options.preserveDrawingBuffer;\n            this.powerPreference = options.powerPreference;\n\n            this.initFromOptions({\n                alpha,\n                premultipliedAlpha,\n                antialias: options.antialias,\n                stencil: true,\n                preserveDrawingBuffer: options.preserveDrawingBuffer,\n                powerPreference: options.powerPreference,\n            });\n        }\n    }\n\n    /**\n     * Initializes the context.\n     * @protected\n     * @param {WebGLRenderingContext} gl - WebGL context\n     */\n    initFromContext(gl: WebGL2RenderingContext): void\n    {\n        this.gl = gl;\n        this.validateContext(gl);\n\n        this.renderer.runners.contextChange.emit(gl);\n\n        const element = this.renderer.view.element;\n\n        (element as any).addEventListener('webglcontextlost', this.handleContextLost, false);\n        element.addEventListener('webglcontextrestored', this.handleContextRestored, false);\n    }\n\n    /**\n     * Initialize from context options\n     * @protected\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext\n     * @param {object} options - context attributes\n     */\n    initFromOptions(options: WebGLContextAttributes): void\n    {\n        const gl = this.createContext(this.renderer.view.element, options);\n\n        this.initFromContext(gl);\n    }\n\n    /**\n     * Helper class to create a WebGL Context\n     * @param canvas - the canvas element that we will get the context from\n     * @param options - An options object that gets passed in to the canvas element containing the\n     *    context attributes\n     * @see https://developer.mozilla.org/en/docs/Web/API/HTMLCanvasElement/getContext\n     * @returns {WebGLRenderingContext} the WebGL context\n     */\n    createContext(canvas: ICanvas, options: WebGLContextAttributes): GlRenderingContext\n    {\n        const gl = canvas.getContext('webgl2', options);\n\n        this.webGLVersion = 2;\n        this.gl = gl as WebGL2RenderingContext;\n\n        this.getExtensions();\n\n        return this.gl;\n    }\n\n    /** Auto-populate the {@link PIXI.ContextSystem.extensions extensions}. */\n    protected getExtensions(): void\n    {\n        // time to set up default extensions that Pixi uses.\n        const { gl } = this;\n\n        const common = {\n            anisotropicFiltering: gl.getExtension('EXT_texture_filter_anisotropic'),\n            floatTextureLinear: gl.getExtension('OES_texture_float_linear'),\n\n            s3tc: gl.getExtension('WEBGL_compressed_texture_s3tc'),\n            s3tc_sRGB: gl.getExtension('WEBGL_compressed_texture_s3tc_srgb'), // eslint-disable-line camelcase\n            etc: gl.getExtension('WEBGL_compressed_texture_etc'),\n            etc1: gl.getExtension('WEBGL_compressed_texture_etc1'),\n            pvrtc: gl.getExtension('WEBGL_compressed_texture_pvrtc')\n                || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc'),\n            atc: gl.getExtension('WEBGL_compressed_texture_atc'),\n            astc: gl.getExtension('WEBGL_compressed_texture_astc'),\n        };\n\n        Object.assign(this.extensions, common, {\n            // Floats and half-floats\n            colorBufferFloat: gl.getExtension('EXT_color_buffer_float'),\n        });\n    }\n\n    /**\n     * Handles a lost webgl context\n     * @param {WebGLContextEvent} event - The context lost event.\n     */\n    protected handleContextLost(event: WebGLContextEvent): void\n    {\n        event.preventDefault();\n    }\n\n    /** Handles a restored webgl context. */\n    protected handleContextRestored(): void\n    {\n        this.renderer.runners.contextChange.emit(this.gl);\n    }\n\n    destroy(): void\n    {\n        const element = this.renderer.view.element;\n\n        this.renderer = null;\n\n        // remove listeners\n        (element as any).removeEventListener('webglcontextlost', this.handleContextLost);\n        element.removeEventListener('webglcontextrestored', this.handleContextRestored);\n\n        this.gl.useProgram(null);\n\n        if (this.extensions.loseContext)\n        {\n            this.extensions.loseContext.loseContext();\n        }\n    }\n\n    /** Handle the post-render runner event. */\n    protected postrender(): void\n    {\n        // if (this.renderer.objectRenderer.renderingToScreen)\n        // {\n        //     this.gl.flush();\n        // }\n    }\n\n    /**\n     * Validate context.\n     * @param {WebGLRenderingContext} gl - Render context.\n     */\n    protected validateContext(gl: WebGL2RenderingContext): void\n    {\n        const attributes = gl.getContextAttributes();\n\n        const isWebGl2 = 'WebGL2RenderingContext' in globalThis && gl instanceof globalThis.WebGL2RenderingContext;\n\n        if (isWebGl2)\n        {\n            this.webGLVersion = 2;\n        }\n\n        // this is going to be fairly simple for now.. but at least we have room to grow!\n        if (attributes && !attributes.stencil)\n        {\n            /* eslint-disable max-len, no-console */\n            console.warn('Provided WebGL context does not have a stencil buffer, masks may not render correctly');\n            /* eslint-enable max-len, no-console */\n        }\n\n        const hasUint32 = isWebGl2 || !!(gl as WebGLRenderingContext).getExtension('OES_element_index_uint');\n\n        this.supports.uint32Indices = hasUint32;\n\n        if (!hasUint32)\n        {\n            /* eslint-disable max-len, no-console */\n            console.warn('Provided WebGL context does not support 32 index buffer, complex graphics may not render correctly');\n            /* eslint-enable max-len, no-console */\n        }\n    }\n}\n"],"names":["ExtensionType"],"mappings":"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"}