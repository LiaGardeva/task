{"version":3,"file":"getGlInfoFromFormat.js","sources":["../../../../../../src/rendering/renderers/gl/geometry/utils/getGlInfoFromFormat.ts"],"sourcesContent":["import { GL_TYPES } from '../../texture/const';\n\nimport type { VertexFormat } from '../../../shared/geometry/const';\n\nconst infoMap = {\n    uint8x2: { type: GL_TYPES.UNSIGNED_BYTE, size: 2, normalised: false },\n    uint8x4: { type: GL_TYPES.UNSIGNED_BYTE, size: 4, normalised: false },\n    sint8x2: { type: GL_TYPES.BYTE, size: 2, normalised: false },\n    sint8x4: { type: GL_TYPES.BYTE, size: 4, normalised: false },\n    unorm8x2: { type: GL_TYPES.UNSIGNED_BYTE, size: 2, normalised: true },\n    unorm8x4: { type: GL_TYPES.UNSIGNED_BYTE, size: 4, normalised: true },\n    snorm8x2: { type: GL_TYPES.BYTE, size: 2, normalised: true },\n    snorm8x4: { type: GL_TYPES.BYTE, size: 4, normalised: true },\n    uint16x2: { type: GL_TYPES.UNSIGNED_SHORT, size: 2, normalised: false },\n    uint16x4: { type: GL_TYPES.UNSIGNED_SHORT, size: 4, normalised: false },\n    sint16x2: { type: GL_TYPES.SHORT, size: 2, normalised: false },\n    sint16x4: { type: GL_TYPES.SHORT, size: 4, normalised: false },\n    unorm16x2: { type: GL_TYPES.UNSIGNED_SHORT, size: 2, normalised: true },\n    unorm16x4: { type: GL_TYPES.UNSIGNED_SHORT, size: 4, normalised: true },\n    snorm16x2: { type: GL_TYPES.SHORT, size: 2, normalised: true },\n    snorm16x4: { type: GL_TYPES.SHORT, size: 4, normalised: true },\n    float16x2: { type: GL_TYPES.HALF_FLOAT, size: 2, normalised: false },\n    float16x4: { type: GL_TYPES.HALF_FLOAT, size: 4, normalised: false },\n    float32: { type: GL_TYPES.FLOAT, size: 1, normalised: false },\n    float32x2: { type: GL_TYPES.FLOAT, size: 2, normalised: false },\n    float32x3: { type: GL_TYPES.FLOAT, size: 3, normalised: false },\n    float32x4: { type: GL_TYPES.FLOAT, size: 4, normalised: false },\n    uint32: { type: GL_TYPES.UNSIGNED_INT, size: 1, normalised: false },\n    uint32x2: { type: GL_TYPES.UNSIGNED_INT, size: 2, normalised: false },\n    uint32x3: { type: GL_TYPES.UNSIGNED_INT, size: 3, normalised: false },\n    uint32x4: { type: GL_TYPES.UNSIGNED_INT, size: 4, normalised: false },\n    sint32: { type: GL_TYPES.INT, size: 1, normalised: false },\n    sint32x2: { type: GL_TYPES.INT, size: 2, normalised: false },\n    sint32x3: { type: GL_TYPES.INT, size: 3, normalised: false },\n    sint32x4: { type: GL_TYPES.INT, size: 4, normalised: false },\n};\n\nexport function getGlInfoFromFormat(format: VertexFormat): { type: number; size: number; normalised: boolean }\n{\n    return infoMap[format] ?? infoMap.float32;\n}\n"],"names":["GL_TYPES"],"mappings":"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"}