{"version":3,"file":"GlProgram.js","sources":["../../../../../src/rendering/renderers/gl/shader/GlProgram.ts"],"sourcesContent":["import { ensurePrecision } from './program/ensurePrecision';\nimport { setProgramName } from './program/setProgramName';\nimport { setProgramVersion } from './program/setProgramVersion';\n\nimport type { TypedArray } from '../../shared/buffer/Buffer';\n\nexport type ProgramPipelineLayoutDescription = GPUBindGroupLayoutEntry[][];\nexport type ProgramLayout = Record<string, number>[];\n\nexport interface IAttributeData\n{\n    type: string;\n    size: number;\n    location: number;\n    name: string;\n}\n\nexport interface IUniformData\n{\n    name: string;\n    index: number;\n    type: string;\n    size: number;\n    isArray: boolean;\n    value: any;\n}\n\nexport interface IUniformBlockData\n{\n    index: number;\n    name: string;\n    size: number;\n    value?: TypedArray;\n}\n\nexport interface GlProgramOptions\n{\n    fragment?: string;\n    vertex?: string;\n    name?: string;\n}\n\nconst processes: Record<string, ((source: string, options: any, isFragment?: boolean) => string)> = {\n    ensurePrecision,\n    setProgramName,\n    setProgramVersion\n};\n\nexport class GlProgram\n{\n    fragment?: string;\n    vertex?: string;\n\n    attributeData: Record<string, IAttributeData>;\n    uniformData: Record<string, IUniformData>;\n    uniformBlockData: Record<string, IUniformBlockData>;\n\n    transformFeedbackVaryings?: {names: string[], bufferMode: 'separate' | 'interleaved'};\n\n    readonly key: string;\n\n    constructor({ fragment, vertex, name }: GlProgramOptions)\n    {\n        const options = {\n            ensurePrecision: {\n                requestedPrecision: 'highp',\n                maxSupportedPrecision: 'highp',\n            },\n            setProgramName: {\n                name,\n            },\n            setProgramVersion: {\n                version: '300 es',\n            }\n        };\n\n        Object.keys(processes).forEach((processKey) =>\n        {\n            const processOptions = options[processKey as keyof typeof options] ?? {};\n\n            fragment = processes[processKey](fragment, processOptions, true);\n            vertex = processes[processKey](vertex, processOptions, false);\n        });\n\n        this.fragment = fragment;\n        this.vertex = vertex;\n\n        this.key = `${this.vertex}:${this.fragment}`;\n    }\n\n    destroy(): void\n    {\n        this.fragment = null;\n        this.vertex = null;\n\n        this.attributeData = null;\n        this.uniformData = null;\n        this.uniformBlockData = null;\n\n        this.transformFeedbackVaryings = null;\n    }\n\n    static programCached: Record<string, GlProgram> = {};\n    static from(options: GlProgramOptions): GlProgram\n    {\n        const key = `${options.vertex}:${options.fragment}`;\n\n        if (!GlProgram.programCached[key])\n        {\n            GlProgram.programCached[key] = new GlProgram(options);\n        }\n\n        return GlProgram.programCached[key];\n    }\n}\n"],"names":["ensurePrecision","setProgramName","setProgramVersion"],"mappings":";;;;;;;;AA0CA,MAAM,SAA8F,GAAA;AAAA,mBAChGA,+BAAA;AAAA,kBACAC,6BAAA;AAAA,qBACAC,mCAAA;AACJ,CAAA,CAAA;AAEO,MAAM,aAAN,MACP;AAAA,EAYI,WAAY,CAAA,EAAE,QAAU,EAAA,MAAA,EAAQ,MAChC,EAAA;AACI,IAAA,MAAM,OAAU,GAAA;AAAA,MACZ,eAAiB,EAAA;AAAA,QACb,kBAAoB,EAAA,OAAA;AAAA,QACpB,qBAAuB,EAAA,OAAA;AAAA,OAC3B;AAAA,MACA,cAAgB,EAAA;AAAA,QACZ,IAAA;AAAA,OACJ;AAAA,MACA,iBAAmB,EAAA;AAAA,QACf,OAAS,EAAA,QAAA;AAAA,OACb;AAAA,KACJ,CAAA;AAEA,IAAA,MAAA,CAAO,IAAK,CAAA,SAAS,CAAE,CAAA,OAAA,CAAQ,CAAC,UAChC,KAAA;AACI,MAAA,MAAM,cAAiB,GAAA,OAAA,CAAQ,UAAkC,CAAA,IAAK,EAAC,CAAA;AAEvE,MAAA,QAAA,GAAW,SAAU,CAAA,UAAU,CAAE,CAAA,QAAA,EAAU,gBAAgB,IAAI,CAAA,CAAA;AAC/D,MAAA,MAAA,GAAS,SAAU,CAAA,UAAU,CAAE,CAAA,MAAA,EAAQ,gBAAgB,KAAK,CAAA,CAAA;AAAA,KAC/D,CAAA,CAAA;AAED,IAAA,IAAA,CAAK,QAAW,GAAA,QAAA,CAAA;AAChB,IAAA,IAAA,CAAK,MAAS,GAAA,MAAA,CAAA;AAEd,IAAA,IAAA,CAAK,GAAM,GAAA,CAAA,EAAG,IAAK,CAAA,MAAA,CAAA,CAAA,EAAU,IAAK,CAAA,QAAA,CAAA,CAAA,CAAA;AAAA,GACtC;AAAA,EAEA,OACA,GAAA;AACI,IAAA,IAAA,CAAK,QAAW,GAAA,IAAA,CAAA;AAChB,IAAA,IAAA,CAAK,MAAS,GAAA,IAAA,CAAA;AAEd,IAAA,IAAA,CAAK,aAAgB,GAAA,IAAA,CAAA;AACrB,IAAA,IAAA,CAAK,WAAc,GAAA,IAAA,CAAA;AACnB,IAAA,IAAA,CAAK,gBAAmB,GAAA,IAAA,CAAA;AAExB,IAAA,IAAA,CAAK,yBAA4B,GAAA,IAAA,CAAA;AAAA,GACrC;AAAA,EAGA,OAAO,KAAK,OACZ,EAAA;AACI,IAAA,MAAM,GAAM,GAAA,CAAA,EAAG,OAAQ,CAAA,MAAA,CAAA,CAAA,EAAU,OAAQ,CAAA,QAAA,CAAA,CAAA,CAAA;AAEzC,IAAA,IAAI,CAAC,UAAA,CAAU,aAAc,CAAA,GAAG,CAChC,EAAA;AACI,MAAA,UAAA,CAAU,aAAc,CAAA,GAAG,CAAI,GAAA,IAAI,WAAU,OAAO,CAAA,CAAA;AAAA,KACxD;AAEA,IAAO,OAAA,UAAA,CAAU,cAAc,GAAG,CAAA,CAAA;AAAA,GACtC;AACJ,CAAA,CAAA;AAlEO,IAAM,SAAN,GAAA,WAAA;AAAM,SAAA,CAsDF,gBAA2C,EAAC;;;;"}