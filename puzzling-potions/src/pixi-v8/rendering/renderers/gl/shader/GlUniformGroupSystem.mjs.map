{"version":3,"file":"GlUniformGroupSystem.mjs","sources":["../../../../../src/rendering/renderers/gl/shader/GlUniformGroupSystem.ts"],"sourcesContent":["import { ExtensionType } from '../../../../extensions/Extensions';\nimport { unsafeEvalSupported } from '../../../../utils/unsafeEvalSupported';\nimport { generateUniformsSync } from './program/generateUniformsSync';\n\nimport type { UniformGroup } from '../../shared/shader/UniformGroup';\nimport type { UniformsSyncCallback } from '../../shared/shader/utils/createUniformBufferSync';\nimport type { System } from '../../shared/system/System';\nimport type { GlRenderingContext } from '../context/GlRenderingContext';\nimport type { WebGLRenderer } from '../WebGLRenderer';\nimport type { GlProgram } from './GlProgram';\n\n/**\n * System plugin to the renderer to manage shaders.\n * @memberof PIXI\n */\nexport class GlUniformGroupSystem implements System\n{\n    /** @ignore */\n    static extension = {\n        type: [\n            ExtensionType.WebGLSystem,\n        ],\n        name: 'uniformGroup',\n    } as const;\n\n    /**\n     * The current WebGL rendering context.\n     * @member {WebGLRenderingContext}\n     */\n    protected gl: GlRenderingContext;\n\n    public destroyed = false;\n\n    /** Cache to holds the generated functions. Stored against UniformObjects unique signature. */\n    private cache: Record<string, UniformsSyncCallback> = {};\n    private renderer: WebGLRenderer;\n\n    private uniformGroupSyncHash: Record<string, Record<string, UniformsSyncCallback>> = {};\n\n    /** @param renderer - The renderer this System works for. */\n    constructor(renderer: WebGLRenderer)\n    {\n        this.renderer = renderer;\n\n        // Validation check that this environment support `new Function`\n        this.systemCheck();\n\n        this.gl = null;\n\n        this.cache = {};\n    }\n\n    /**\n     * Overrideable function by `@pixi/unsafe-eval` to silence\n     * throwing an error if platform doesn't support unsafe-evals.\n     * @private\n     */\n    private systemCheck(): void\n    {\n        if (!unsafeEvalSupported())\n        {\n            throw new Error('Current environment does not allow unsafe-eval, '\n                + 'please use @pixi/unsafe-eval module to enable support.');\n        }\n    }\n\n    protected contextChange(gl: GlRenderingContext): void\n    {\n        this.gl = gl;\n    }\n\n    /**\n     * Uploads the uniforms values to the currently bound shader.\n     * @param group - the uniforms values that be applied to the current shader\n     * @param program\n     * @param syncData\n     * @param syncData.textureCount\n     */\n    updateUniformGroup(group: UniformGroup, program: GlProgram, syncData: {textureCount: number}): void\n    {\n        const programData = this.renderer.shader.getProgramData(program);\n\n        if (!group.isStatic || group.dirtyId !== programData.uniformDirtyGroups[group.uid])\n        {\n            programData.uniformDirtyGroups[group.uid] = group.dirtyId;\n\n            const syncFunc = this.getUniformSyncFunction(group, program);\n\n            syncFunc(programData.uniformData, group.uniforms, this.renderer, syncData);\n        }\n    }\n\n    /**\n     * Overrideable by the @pixi/unsafe-eval package to use static syncUniforms instead.\n     * @param group\n     * @param program\n     */\n    getUniformSyncFunction(group: UniformGroup, program: GlProgram): UniformsSyncCallback\n    {\n        return this.uniformGroupSyncHash[group.signature]?.[program.key]\n        || this.createUniformSyncFunction(group, program);\n    }\n\n    createUniformSyncFunction(group: UniformGroup, program: GlProgram): UniformsSyncCallback\n    {\n        const uniformGroupSyncHash = this.uniformGroupSyncHash[group.signature]\n         || (this.uniformGroupSyncHash[group.signature] = {});\n\n        const id = this.getSignature(group, program.uniformData, 'u');\n\n        if (!this.cache[id])\n        {\n            this.cache[id] = generateUniformsSync(group, program.uniformData);\n        }\n\n        uniformGroupSyncHash[program.key] = this.cache[id];\n\n        return uniformGroupSyncHash[program.key];\n    }\n\n    /**\n     * Takes a uniform group and data and generates a unique signature for them.\n     * @param group - The uniform group to get signature of\n     * @param group.uniforms\n     * @param uniformData - Uniform information generated by the shader\n     * @param preFix\n     * @returns Unique signature of the uniform group\n     */\n    private getSignature(group: UniformGroup, uniformData: Record<string, any>, preFix: string): string\n    {\n        const uniforms = group.uniforms;\n\n        const strings = [`${preFix}-`];\n\n        for (const i in uniforms)\n        {\n            strings.push(i);\n\n            if (uniformData[i])\n            {\n                strings.push(uniformData[i].type);\n            }\n        }\n\n        return strings.join('-');\n    }\n\n    /** Destroys this System and removes all its textures. */\n    destroy(): void\n    {\n        this.renderer = null;\n        // TODO implement destroy method for ShaderSystem\n        this.destroyed = true;\n    }\n}\n"],"names":[],"mappings":"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"}