{"version":3,"file":"mapFormatToGlInternalFormat.mjs","sources":["../../../../../../src/rendering/renderers/gl/texture/utils/mapFormatToGlInternalFormat.ts"],"sourcesContent":["import type { GlRenderingContext } from '../../context/GlRenderingContext';\n\n/**\n * Returns a lookup table that maps each type-format pair to a compatible internal format.\n * @memberof PIXI\n * @function mapTypeAndFormatToInternalFormat\n * @private\n * @param {WebGLRenderingContext} gl - The rendering context.\n * @returns Lookup table.\n */\nexport function mapFormatToGlInternalFormat(gl: GlRenderingContext): Record<string, number>\n{\n    return {\n        // 8-bit formats\n        r8unorm: gl.R8,\n        r8snorm: gl.R8_SNORM,\n        r8uint: gl.R8UI,\n        r8sint: gl.R8I,\n\n        // 16-bit formats\n        r16uint: gl.R16UI,\n        r16sint: gl.R16I,\n        r16float: gl.R16F,\n        rg8unorm: gl.RG8,\n        rg8snorm: gl.RG8_SNORM,\n        rg8uint: gl.RG8UI,\n        rg8sint: gl.RG8I,\n\n        // 32-bit formats\n        r32uint: gl.R32UI,\n        r32sint: gl.R32I,\n        r32float: gl.R32F,\n        rg16uint: gl.RG16UI,\n        rg16sint: gl.RG16I,\n        rg16float: gl.RG16F,\n        rgba8unorm: gl.RGBA,\n        'rgba8unorm-srgb': gl.SRGB8_ALPHA8,\n\n        // Packed 32-bit formats\n        rgba8snorm: gl.RGBA8_SNORM,\n        rgba8uint: gl.RGBA8UI,\n        rgba8sint: gl.RGBA8I,\n        bgra8unorm: gl.RGBA8,\n        'bgra8unorm-srgb': gl.SRGB8_ALPHA8,\n        rgb9e5ufloat: gl.RGB9_E5,\n        rgb10a2unorm: gl.RGB10_A2,\n        rg11b10ufloat: gl.R11F_G11F_B10F,\n\n        // 64-bit formats\n        rg32uint: gl.RG32UI,\n        rg32sint: gl.RG32I,\n        rg32float: gl.RG32F,\n        rgba16uint: gl.RGBA16UI,\n        rgba16sint: gl.RGBA16I,\n        rgba16float: gl.RGBA16F,\n\n        // 128-bit formats\n        rgba32uint: gl.RGBA32UI,\n        rgba32sint: gl.RGBA32I,\n        rgba32float: gl.RGBA32F,\n\n        // Depth/stencil formats\n        stencil8: gl.STENCIL_INDEX8,\n        depth16unorm: gl.DEPTH_COMPONENT16,\n        depth24plus: gl.DEPTH_COMPONENT24,\n        'depth24plus-stencil8': gl.DEPTH24_STENCIL8,\n        depth32float: gl.DEPTH_COMPONENT32F,\n        'depth32float-stencil8': gl.DEPTH32F_STENCIL8,\n\n    };\n}\n"],"names":[],"mappings":"AAUO,SAAS,4BAA4B,EAC5C,EAAA;AACI,EAAO,OAAA;AAAA;AAAA,IAEH,SAAS,EAAG,CAAA,EAAA;AAAA,IACZ,SAAS,EAAG,CAAA,QAAA;AAAA,IACZ,QAAQ,EAAG,CAAA,IAAA;AAAA,IACX,QAAQ,EAAG,CAAA,GAAA;AAAA;AAAA,IAGX,SAAS,EAAG,CAAA,KAAA;AAAA,IACZ,SAAS,EAAG,CAAA,IAAA;AAAA,IACZ,UAAU,EAAG,CAAA,IAAA;AAAA,IACb,UAAU,EAAG,CAAA,GAAA;AAAA,IACb,UAAU,EAAG,CAAA,SAAA;AAAA,IACb,SAAS,EAAG,CAAA,KAAA;AAAA,IACZ,SAAS,EAAG,CAAA,IAAA;AAAA;AAAA,IAGZ,SAAS,EAAG,CAAA,KAAA;AAAA,IACZ,SAAS,EAAG,CAAA,IAAA;AAAA,IACZ,UAAU,EAAG,CAAA,IAAA;AAAA,IACb,UAAU,EAAG,CAAA,MAAA;AAAA,IACb,UAAU,EAAG,CAAA,KAAA;AAAA,IACb,WAAW,EAAG,CAAA,KAAA;AAAA,IACd,YAAY,EAAG,CAAA,IAAA;AAAA,IACf,mBAAmB,EAAG,CAAA,YAAA;AAAA;AAAA,IAGtB,YAAY,EAAG,CAAA,WAAA;AAAA,IACf,WAAW,EAAG,CAAA,OAAA;AAAA,IACd,WAAW,EAAG,CAAA,MAAA;AAAA,IACd,YAAY,EAAG,CAAA,KAAA;AAAA,IACf,mBAAmB,EAAG,CAAA,YAAA;AAAA,IACtB,cAAc,EAAG,CAAA,OAAA;AAAA,IACjB,cAAc,EAAG,CAAA,QAAA;AAAA,IACjB,eAAe,EAAG,CAAA,cAAA;AAAA;AAAA,IAGlB,UAAU,EAAG,CAAA,MAAA;AAAA,IACb,UAAU,EAAG,CAAA,KAAA;AAAA,IACb,WAAW,EAAG,CAAA,KAAA;AAAA,IACd,YAAY,EAAG,CAAA,QAAA;AAAA,IACf,YAAY,EAAG,CAAA,OAAA;AAAA,IACf,aAAa,EAAG,CAAA,OAAA;AAAA;AAAA,IAGhB,YAAY,EAAG,CAAA,QAAA;AAAA,IACf,YAAY,EAAG,CAAA,OAAA;AAAA,IACf,aAAa,EAAG,CAAA,OAAA;AAAA;AAAA,IAGhB,UAAU,EAAG,CAAA,cAAA;AAAA,IACb,cAAc,EAAG,CAAA,iBAAA;AAAA,IACjB,aAAa,EAAG,CAAA,iBAAA;AAAA,IAChB,wBAAwB,EAAG,CAAA,gBAAA;AAAA,IAC3B,cAAc,EAAG,CAAA,kBAAA;AAAA,IACjB,yBAAyB,EAAG,CAAA,iBAAA;AAAA,GAEhC,CAAA;AACJ;;;;"}