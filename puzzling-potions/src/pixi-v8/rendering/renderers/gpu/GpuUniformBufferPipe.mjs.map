{"version":3,"file":"GpuUniformBufferPipe.mjs","sources":["../../../../src/rendering/renderers/gpu/GpuUniformBufferPipe.ts"],"sourcesContent":["import { ExtensionType } from '../../../extensions/Extensions';\nimport { BigPool } from '../../../utils/pool/PoolGroup';\nimport { Buffer } from '../shared/buffer/Buffer';\nimport { BufferUsage } from '../shared/buffer/const';\nimport { BindGroup } from './shader/BindGroup';\n\nimport type { PoolItem } from '../../../utils/pool/Pool';\nimport type { UniformGroup } from '../shared/shader/UniformGroup';\nimport type { WebGPURenderer } from './WebGPURenderer';\n\nclass UniformBindGroup extends BindGroup\n{\n    constructor()\n    {\n        super({\n            0: new Buffer({\n                data: new Float32Array(128),\n                usage: BufferUsage.UNIFORM | BufferUsage.COPY_DST,\n            }),\n        });\n    }\n\n    get buffer(): Buffer\n    {\n        return this.resources[0] as Buffer;\n    }\n\n    get data(): Float32Array\n    {\n        return (this.resources[0] as Buffer).data as Float32Array;\n    }\n}\n\nexport class GpuUniformBufferPipe\n{\n    /** @ignore */\n    static extension = {\n        type: [\n            ExtensionType.WebGPUPipes,\n        ],\n        name: 'uniformBuffer',\n    } as const;\n\n    private activeBindGroups: BindGroup[] = [];\n    private activeBindGroupIndex = 0;\n    private renderer: WebGPURenderer;\n\n    constructor(renderer: WebGPURenderer)\n    {\n        this.renderer = renderer;\n    }\n\n    getUniformBindGroup(uniformGroup: UniformGroup)\n    {\n        const renderer = this.renderer;\n\n        renderer.uniformBuffer.ensureUniformGroup(uniformGroup);\n\n        const bindGroup = BigPool.get(UniformBindGroup);\n\n        renderer.uniformBuffer.syncUniformGroup(uniformGroup, bindGroup.data, 0);\n\n        bindGroup.buffer.update(uniformGroup.buffer.data.byteLength);\n\n        this.activeBindGroups[this.activeBindGroupIndex++] = bindGroup;\n\n        return bindGroup;\n    }\n\n    renderEnd()\n    {\n        for (let i = 0; i < this.activeBindGroupIndex; i++)\n        {\n            BigPool.return(this.activeBindGroups[i] as PoolItem);\n        }\n\n        this.activeBindGroupIndex = 0;\n    }\n}\n"],"names":[],"mappings":";;;;;;AAUA,MAAM,yBAAyB,SAC/B,CAAA;AAAA,EACI,WACA,GAAA;AACI,IAAM,KAAA,CAAA;AAAA,MACF,CAAA,EAAG,IAAI,MAAO,CAAA;AAAA,QACV,IAAA,EAAM,IAAI,YAAA,CAAa,GAAG,CAAA;AAAA,QAC1B,KAAA,EAAO,WAAY,CAAA,OAAA,GAAU,WAAY,CAAA,QAAA;AAAA,OAC5C,CAAA;AAAA,KACJ,CAAA,CAAA;AAAA,GACL;AAAA,EAEA,IAAI,MACJ,GAAA;AACI,IAAO,OAAA,IAAA,CAAK,UAAU,CAAC,CAAA,CAAA;AAAA,GAC3B;AAAA,EAEA,IAAI,IACJ,GAAA;AACI,IAAQ,OAAA,IAAA,CAAK,SAAU,CAAA,CAAC,CAAa,CAAA,IAAA,CAAA;AAAA,GACzC;AACJ,CAAA;AAEO,MAAM,oBACb,CAAA;AAAA,EAaI,YAAY,QACZ,EAAA;AALA,IAAA,IAAA,CAAQ,mBAAgC,EAAC,CAAA;AACzC,IAAA,IAAA,CAAQ,oBAAuB,GAAA,CAAA,CAAA;AAK3B,IAAA,IAAA,CAAK,QAAW,GAAA,QAAA,CAAA;AAAA,GACpB;AAAA,EAEA,oBAAoB,YACpB,EAAA;AACI,IAAA,MAAM,WAAW,IAAK,CAAA,QAAA,CAAA;AAEtB,IAAS,QAAA,CAAA,aAAA,CAAc,mBAAmB,YAAY,CAAA,CAAA;AAEtD,IAAM,MAAA,SAAA,GAAY,OAAQ,CAAA,GAAA,CAAI,gBAAgB,CAAA,CAAA;AAE9C,IAAA,QAAA,CAAS,aAAc,CAAA,gBAAA,CAAiB,YAAc,EAAA,SAAA,CAAU,MAAM,CAAC,CAAA,CAAA;AAEvE,IAAA,SAAA,CAAU,MAAO,CAAA,MAAA,CAAO,YAAa,CAAA,MAAA,CAAO,KAAK,UAAU,CAAA,CAAA;AAE3D,IAAK,IAAA,CAAA,gBAAA,CAAiB,IAAK,CAAA,oBAAA,EAAsB,CAAI,GAAA,SAAA,CAAA;AAErD,IAAO,OAAA,SAAA,CAAA;AAAA,GACX;AAAA,EAEA,SACA,GAAA;AACI,IAAA,KAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,IAAA,CAAK,sBAAsB,CAC/C,EAAA,EAAA;AACI,MAAA,OAAA,CAAQ,MAAO,CAAA,IAAA,CAAK,gBAAiB,CAAA,CAAC,CAAa,CAAA,CAAA;AAAA,KACvD;AAEA,IAAA,IAAA,CAAK,oBAAuB,GAAA,CAAA,CAAA;AAAA,GAChC;AACJ,CAAA;AAAA;AA7Ca,oBAAA,CAGF,SAAY,GAAA;AAAA,EACf,IAAM,EAAA;AAAA,IACF,aAAc,CAAA,WAAA;AAAA,GAClB;AAAA,EACA,IAAM,EAAA,eAAA;AACV,CAAA;;;;"}