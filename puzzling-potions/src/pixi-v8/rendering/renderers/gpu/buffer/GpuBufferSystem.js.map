{"version":3,"file":"GpuBufferSystem.js","sources":["../../../../../src/rendering/renderers/gpu/buffer/GpuBufferSystem.ts"],"sourcesContent":["import { ExtensionType } from '../../../../extensions/Extensions';\nimport { fastCopy } from '../../shared/buffer/utils/fastCopy';\n\nimport type { Buffer } from '../../shared/buffer/Buffer';\nimport type { System } from '../../shared/system/System';\nimport type { GPU } from '../GpuDeviceSystem';\nimport type { WebGPURenderer } from '../WebGPURenderer';\n\nexport class BufferSystem implements System\n{\n    /** @ignore */\n    static extension = {\n        type: [\n            ExtensionType.WebGPUSystem,\n        ],\n        name: 'buffer',\n    } as const;\n\n    readonly renderer: WebGPURenderer;\n    protected CONTEXT_UID: number;\n    private _gpuBuffers: { [key: number]: GPUBuffer } = {};\n\n    private gpu: GPU;\n\n    protected contextChange(gpu: GPU): void\n    {\n        this.gpu = gpu;\n    }\n\n    getGPUBuffer(buffer: Buffer): GPUBuffer\n    {\n        return this._gpuBuffers[buffer.uid] || this.createGPUBuffer(buffer);\n    }\n\n    updateBuffer(buffer: Buffer): GPUBuffer\n    {\n        const gpuBuffer = this._gpuBuffers[buffer.uid] || this.createGPUBuffer(buffer);\n\n        // TODO this can be better...\n        if (buffer._updateID && buffer.data)\n        {\n            buffer._updateID = 0;\n            this.gpu.device.queue.writeBuffer(gpuBuffer, 0, buffer.data.buffer, 0, buffer._updateSize);// , 0);\n        }\n\n        return gpuBuffer;\n    }\n\n    /** dispose all WebGL resources of all managed buffers */\n    destroyAll(): void\n    {\n        for (const id in this._gpuBuffers)\n        {\n            this._gpuBuffers[id].destroy();\n        }\n\n        this._gpuBuffers = {};\n    }\n\n    createGPUBuffer(buffer: Buffer): GPUBuffer\n    {\n        const gpuBuffer = this.gpu.device.createBuffer(buffer.descriptor);\n\n        buffer._updateID = 0;\n\n        if (buffer.data)\n        {\n            // TODO if data is static, this can be mapped at creation\n            fastCopy(buffer.data.buffer, gpuBuffer.getMappedRange());\n\n            gpuBuffer.unmap();\n        }\n\n        this._gpuBuffers[buffer.uid] = gpuBuffer;\n\n        buffer.on('update', this.updateBuffer, this);\n        buffer.on('change', this.onBufferChange, this);\n        buffer.on('destroy', this.onBufferDestroy, this);\n\n        return gpuBuffer;\n    }\n\n    protected onBufferChange(buffer: Buffer)\n    {\n        let gpuBuffer = this._gpuBuffers[buffer.uid];\n\n        gpuBuffer.destroy();\n        gpuBuffer = this.createGPUBuffer(buffer);\n        buffer._updateID = 0;\n    }\n\n    /**\n     * Disposes buffer\n     * @param buffer - buffer with data\n     */\n    onBufferDestroy(buffer: Buffer): void\n    {\n        const gpuBuffer = this._gpuBuffers[buffer.uid];\n\n        gpuBuffer.destroy();\n\n        this._gpuBuffers[buffer.uid] = null;\n    }\n\n    destroy(): void\n    {\n        throw new Error('Method not implemented.');\n    }\n}\n\n"],"names":["fastCopy","ExtensionType"],"mappings":"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"}