{"version":3,"file":"GpuShaderSystem.js","sources":["../../../../../src/rendering/renderers/gpu/shader/GpuShaderSystem.ts"],"sourcesContent":["import { ExtensionType } from '../../../../extensions/Extensions';\nimport { UniformGroup } from '../../shared/shader/UniformGroup';\n\nimport type { Shader } from '../../shared/shader/Shader';\nimport type { System } from '../../shared/system/System';\nimport type { GPU } from '../GpuDeviceSystem';\nimport type { WebGPURenderer } from '../WebGPURenderer';\nimport type { GpuProgram } from './GpuProgram';\n\nexport class GpuShaderSystem implements System\n{\n    /** @ignore */\n    static extension = {\n        type: [\n            ExtensionType.WebGPUSystem,\n        ],\n        name: 'shader',\n    } as const;\n\n    private readonly renderer: WebGPURenderer;\n\n    private gpu: GPU;\n\n    constructor(renderer: WebGPURenderer)\n    {\n        this.renderer = renderer;\n    }\n\n    protected contextChange(gpu: GPU): void\n    {\n        this.gpu = gpu;\n    }\n\n    createProgramLayout(program: GpuProgram)\n    {\n        const device = this.gpu.device;\n\n        // TODO rename this... confusing with the below.. gpuLayout is defined by the user\n        if (!program._gpuLayout)\n        {\n            if (program.gpuLayout)\n            {\n                const bindGroups = program.gpuLayout.map((group) => device.createBindGroupLayout({ entries: group }));\n\n                const pipelineLayoutDesc = { bindGroupLayouts: bindGroups };\n\n                program._gpuLayout = {\n                    bindGroups,\n                    pipeline: device.createPipelineLayout(pipelineLayoutDesc),\n                };\n            }\n            else\n            {\n                program._gpuLayout = {\n                    bindGroups: null,\n                    pipeline: 'auto',\n                };\n            }\n        }\n    }\n\n    updateData(shader: Shader): void\n    {\n        for (let i = 0; i < shader.gpuProgram.layout.length; i++)\n        {\n            const group = shader.groups[i];\n            const groupLayout = shader.gpuProgram.layout[i];\n\n            for (const j in groupLayout)\n            {\n                const resource = group.resources[j] ?? group.resources[groupLayout[j]];\n\n                // TODO make this dynamic..\n                if (resource instanceof UniformGroup)\n                {\n                    const uniformGroup = resource;\n\n                    this.renderer.uniformBuffer.updateUniformGroup(uniformGroup);\n                }\n            }\n        }\n    }\n\n    destroy(): void\n    {\n        throw new Error('Method not implemented.');\n    }\n}\n"],"names":["UniformGroup","ExtensionType"],"mappings":";;;;;;;AASO,MAAM,eACb,CAAA;AAAA,EAaI,YAAY,QACZ,EAAA;AACI,IAAA,IAAA,CAAK,QAAW,GAAA,QAAA,CAAA;AAAA,GACpB;AAAA,EAEU,cAAc,GACxB,EAAA;AACI,IAAA,IAAA,CAAK,GAAM,GAAA,GAAA,CAAA;AAAA,GACf;AAAA,EAEA,oBAAoB,OACpB,EAAA;AACI,IAAM,MAAA,MAAA,GAAS,KAAK,GAAI,CAAA,MAAA,CAAA;AAGxB,IAAI,IAAA,CAAC,QAAQ,UACb,EAAA;AACI,MAAA,IAAI,QAAQ,SACZ,EAAA;AACI,QAAA,MAAM,UAAa,GAAA,OAAA,CAAQ,SAAU,CAAA,GAAA,CAAI,CAAC,KAAA,KAAU,MAAO,CAAA,qBAAA,CAAsB,EAAE,OAAA,EAAS,KAAM,EAAC,CAAC,CAAA,CAAA;AAEpG,QAAM,MAAA,kBAAA,GAAqB,EAAE,gBAAA,EAAkB,UAAW,EAAA,CAAA;AAE1D,QAAA,OAAA,CAAQ,UAAa,GAAA;AAAA,UACjB,UAAA;AAAA,UACA,QAAA,EAAU,MAAO,CAAA,oBAAA,CAAqB,kBAAkB,CAAA;AAAA,SAC5D,CAAA;AAAA,OAGJ,MAAA;AACI,QAAA,OAAA,CAAQ,UAAa,GAAA;AAAA,UACjB,UAAY,EAAA,IAAA;AAAA,UACZ,QAAU,EAAA,MAAA;AAAA,SACd,CAAA;AAAA,OACJ;AAAA,KACJ;AAAA,GACJ;AAAA,EAEA,WAAW,MACX,EAAA;AACI,IAAA,KAAA,IAAS,IAAI,CAAG,EAAA,CAAA,GAAI,OAAO,UAAW,CAAA,MAAA,CAAO,QAAQ,CACrD,EAAA,EAAA;AACI,MAAM,MAAA,KAAA,GAAQ,MAAO,CAAA,MAAA,CAAO,CAAC,CAAA,CAAA;AAC7B,MAAA,MAAM,WAAc,GAAA,MAAA,CAAO,UAAW,CAAA,MAAA,CAAO,CAAC,CAAA,CAAA;AAE9C,MAAA,KAAA,MAAW,KAAK,WAChB,EAAA;AACI,QAAM,MAAA,QAAA,GAAW,MAAM,SAAU,CAAA,CAAC,KAAK,KAAM,CAAA,SAAA,CAAU,WAAY,CAAA,CAAC,CAAC,CAAA,CAAA;AAGrE,QAAA,IAAI,oBAAoBA,yBACxB,EAAA;AACI,UAAA,MAAM,YAAe,GAAA,QAAA,CAAA;AAErB,UAAK,IAAA,CAAA,QAAA,CAAS,aAAc,CAAA,kBAAA,CAAmB,YAAY,CAAA,CAAA;AAAA,SAC/D;AAAA,OACJ;AAAA,KACJ;AAAA,GACJ;AAAA,EAEA,OACA,GAAA;AACI,IAAM,MAAA,IAAI,MAAM,yBAAyB,CAAA,CAAA;AAAA,GAC7C;AACJ,CAAA;AAAA;AA9Ea,eAAA,CAGF,SAAY,GAAA;AAAA,EACf,IAAM,EAAA;AAAA,IACFC,wBAAc,CAAA,YAAA;AAAA,GAClB;AAAA,EACA,IAAM,EAAA,QAAA;AACV,CAAA;;;;"}