{"version":3,"file":"LayerRenderable.mjs","sources":["../../../../src/rendering/renderers/shared/LayerRenderable.ts"],"sourcesContent":["import EventEmitter from 'eventemitter3';\nimport { Matrix } from '../../../maths/Matrix';\nimport { getRenderableUID } from '../../scene/Container';\n\nimport type { Container } from '../../scene/Container';\nimport type { Renderable } from './Renderable';\nimport type { View } from './View';\n\n/**\n * LayerRenderable is used to render the view of the root container of a layer group\n * We don't want to inherit the transform / color of the root container as that information is\n * uploaded to the GPU and applied globally.\n *\n * This proxy allows us to override the values. This saves us a lot of extra if statements in the core loop\n * for what is normally a very rare use case!\n */\nexport class LayerRenderable<T extends View = View> extends EventEmitter implements Renderable<T>\n{\n    uid = getRenderableUID();\n    view: T;\n    original: Container<View>;\n    layerTransform: Matrix;\n    worldTransform: Matrix;\n    layerColor: number;\n    layerVisibleRenderable: number;\n    didViewUpdate: boolean;\n\n    constructor({ original, view }: { original: Container<View>; view: T; })\n    {\n        super();\n\n        this.view = view;\n        this.original = original;\n        this.layerTransform = new Matrix();\n        this.layerColor = 0xFFFFFFFF;\n        this.layerVisibleRenderable = 0b11;\n\n        this.view.owner = this;\n    }\n\n    get layerBlendMode()\n    {\n        return this.original.layerBlendMode;\n    }\n\n    onViewUpdate()\n    {\n        this.didViewUpdate = true;\n        this.original.layerGroup.onChildViewUpdate(this);\n    }\n\n    get isRenderable()\n    {\n        return this.original.isRenderable;\n    }\n}\n"],"names":[],"mappings":";;;;AAgBO,MAAM,wBAA+C,YAC5D,CAAA;AAAA,EAUI,WAAY,CAAA,EAAE,QAAU,EAAA,IAAA,EACxB,EAAA;AACI,IAAM,KAAA,EAAA,CAAA;AAXV,IAAA,IAAA,CAAA,GAAA,GAAM,gBAAiB,EAAA,CAAA;AAanB,IAAA,IAAA,CAAK,IAAO,GAAA,IAAA,CAAA;AACZ,IAAA,IAAA,CAAK,QAAW,GAAA,QAAA,CAAA;AAChB,IAAK,IAAA,CAAA,cAAA,GAAiB,IAAI,MAAO,EAAA,CAAA;AACjC,IAAA,IAAA,CAAK,UAAa,GAAA,UAAA,CAAA;AAClB,IAAA,IAAA,CAAK,sBAAyB,GAAA,CAAA,CAAA;AAE9B,IAAA,IAAA,CAAK,KAAK,KAAQ,GAAA,IAAA,CAAA;AAAA,GACtB;AAAA,EAEA,IAAI,cACJ,GAAA;AACI,IAAA,OAAO,KAAK,QAAS,CAAA,cAAA,CAAA;AAAA,GACzB;AAAA,EAEA,YACA,GAAA;AACI,IAAA,IAAA,CAAK,aAAgB,GAAA,IAAA,CAAA;AACrB,IAAK,IAAA,CAAA,QAAA,CAAS,UAAW,CAAA,iBAAA,CAAkB,IAAI,CAAA,CAAA;AAAA,GACnD;AAAA,EAEA,IAAI,YACJ,GAAA;AACI,IAAA,OAAO,KAAK,QAAS,CAAA,YAAA,CAAA;AAAA,GACzB;AACJ;;;;"}