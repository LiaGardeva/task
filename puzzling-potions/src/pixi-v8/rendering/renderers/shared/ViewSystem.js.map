{"version":3,"file":"ViewSystem.js","sources":["../../../../src/rendering/renderers/shared/ViewSystem.ts"],"sourcesContent":["import { ExtensionType } from '../../../extensions/Extensions';\nimport { settings } from '../../../settings/settings';\nimport { getCanvasTexture } from './texture/utils/getCanvasTexture';\n\nimport type { ICanvas } from '../../../settings/adapter/ICanvas';\nimport type { Renderer } from '../types';\nimport type { System } from './system/System';\nimport type { CanvasSourceOptions } from './texture/sources/CanvasSource';\nimport type { Texture } from './texture/Texture';\n\n/**\n * Options passed to the ViewSystem\n * @memberof PIXI\n */\nexport interface ViewSystemOptions\n{\n    /**\n     * The width of the screen.\n     * @memberof PIXI.WebGLOptions\n     */\n    width?: number;\n    /**\n     * The height of the screen.\n     * @memberof PIXI.WebGLOptions\n     */\n    height?: number;\n    /**\n     * The canvas to use as a view, optional.\n     * @memberof PIXI.WebGLOptions\n     */\n    element?: ICanvas;\n    /**\n     * Resizes renderer view in CSS pixels to allow for resolutions other than 1.\n     * @memberof PIXI.WebGLOptions\n     */\n    autoDensity?: boolean;\n    /**\n     * The resolution / device pixel ratio of the renderer.\n     * @memberof PIXI.WebGLOptions\n     */\n    resolution?: number;\n    /**\n     * **WebGL Only.** Whether to enable anti-aliasing. This may affect performance.\n     * @memberof PIXI.WebGLOptions\n     */\n    antialias?: boolean;\n    /**\n     * TODO: multiView\n     * @memberof PIXI.WebGLOptions\n     */\n    multiView?: boolean;\n}\n\n/**\n * The view system manages the main canvas that is attached to the DOM.\n * This main role is to deal with how the holding the view reference and dealing with how it is resized.\n * @memberof PIXI\n */\nexport class ViewSystem implements System\n{\n    /** @ignore */\n    static extension = {\n        type: [\n            ExtensionType.WebGLSystem,\n            ExtensionType.WebGPUSystem,\n            ExtensionType.CanvasSystem,\n        ],\n        name: 'view',\n        priority: 0,\n    } as const;\n\n    /** @ignore */\n    static defaultOptions: ViewSystemOptions = {\n        /**\n         * {@link PIXI.WebGLOptions.width}\n         * @default 800\n         */\n        width: 800,\n        /**\n         * {@link PIXI.WebGLOptions.height}\n         * @default 600\n         */\n        height: 600,\n        /**\n         * {@link PIXI.WebGLOptions.resolution}\n         * @type {number}\n         * @default PIXI.settings.RESOLUTION\n         */\n        resolution: settings.RESOLUTION,\n        /**\n         * {@link PIXI.WebGLOptions.autoDensity}\n         * @default false\n         */\n        autoDensity: true,\n        /**\n         * {@link PIXI.WebGLOptions.antialias}\n         * @default false\n         */\n        antialias: false,\n    };\n\n    readonly renderer: Renderer;\n\n    public multiView: boolean;\n\n    /** The canvas element that everything is drawn to. */\n    public element: ICanvas;\n\n    public texture: Texture;\n\n    /**\n     * Whether CSS dimensions of canvas view should be resized to screen dimensions automatically.\n     * @member {boolean}\n     */\n    public autoDensity: boolean;\n\n    public antialias: boolean;\n\n    constructor(renderer: Renderer)\n    {\n        this.renderer = renderer;\n    }\n\n    get resolution(): number\n    {\n        return this.texture.source._resolution;\n    }\n\n    set resolution(value: number)\n    {\n        this.texture.source.resize(\n            this.texture.source.width,\n            this.texture.source.height,\n            value\n        );\n    }\n\n    /**\n     * initiates the view system\n     * @param options - the options for the view\n     */\n    init(options: ViewSystemOptions): void\n    {\n        this.element = options.element || settings.ADAPTER.createCanvas();\n\n        this.antialias = !!options.antialias;\n\n        this.texture = getCanvasTexture(this.element, options as CanvasSourceOptions);\n\n        this.multiView = !!options.multiView;\n\n        if (this.autoDensity)\n        {\n            this.element.style.width = `${this.texture.width}px`;\n            this.element.style.height = `${this.texture.height}px`;\n        }\n    }\n\n    /**\n     * Resizes the screen and canvas to the specified dimensions.\n     * @param desiredScreenWidth - The new width of the screen.\n     * @param desiredScreenHeight - The new height of the screen.\n     * @param resolution\n     */\n    resize(desiredScreenWidth: number, desiredScreenHeight: number, resolution: number): void\n    {\n        this.texture.source.resize(desiredScreenWidth, desiredScreenHeight, resolution);\n\n        if (this.autoDensity)\n        {\n            this.element.style.width = `${desiredScreenWidth}px`;\n            this.element.style.height = `${desiredScreenHeight}px`;\n        }\n    }\n\n    /**\n     * Destroys this System and optionally removes the canvas from the dom.\n     * @param {boolean} [removeView=false] - Whether to remove the canvas from the DOM.\n     */\n    destroy(removeView: boolean): void\n    {\n        // ka boom!\n        if (removeView && this.element.parentNode)\n        {\n            this.element.parentNode.removeChild(this.element);\n        }\n\n        // this._renderer = null;\n        this.element = null;\n    }\n}\n"],"names":["settings","getCanvasTexture","ExtensionType"],"mappings":"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"}