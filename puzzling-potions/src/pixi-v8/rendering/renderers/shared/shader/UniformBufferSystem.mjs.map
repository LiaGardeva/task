{"version":3,"file":"UniformBufferSystem.mjs","sources":["../../../../../src/rendering/renderers/shared/shader/UniformBufferSystem.ts"],"sourcesContent":["import { ExtensionType } from '../../../../extensions/Extensions';\nimport { Buffer } from '../buffer/Buffer';\nimport { BufferUsage } from '../buffer/const';\nimport { createUBOElements } from './utils/createUBOElements';\nimport { generateUniformBufferSync } from './utils/createUniformBufferSync';\n\nimport type { Renderer } from '../../types';\nimport type { System } from '../system/System';\nimport type { UniformGroup } from './UniformGroup';\nimport type { UniformBufferLayout } from './utils/createUBOElements';\nimport type { UniformsSyncCallback } from './utils/createUniformBufferSync';\n\nexport class UniformBufferSystem implements System\n{\n    /** @ignore */\n    static extension = {\n        type: [\n            ExtensionType.WebGLSystem,\n            ExtensionType.WebGPUSystem,\n            ExtensionType.CanvasSystem,\n        ],\n        name: 'uniformBuffer',\n    } as const;\n\n    readonly renderer: Renderer;\n\n    /** Cache of uniform buffer layouts and sync functions, so we don't have to re-create them */\n    private _syncFunctionHash: Record<string, {\n        layout: UniformBufferLayout,\n        syncFunction: (uniforms: Record<string, any>, data: Float32Array, offset: number) => void\n    }> = {};\n\n    constructor(renderer: Renderer)\n    {\n        this.renderer = renderer;\n    }\n\n    ensureUniformGroup(uniformGroup: UniformGroup): void\n    {\n        if (!uniformGroup._syncFunction)\n        {\n            this.initUniformGroup(uniformGroup);\n        }\n    }\n\n    initUniformGroup(uniformGroup: UniformGroup): UniformsSyncCallback\n    {\n        const uniformGroupSignature = uniformGroup.signature;\n\n        let uniformData = this._syncFunctionHash[uniformGroupSignature];\n\n        if (!uniformData)\n        {\n            const elements = Object.keys(uniformGroup.uniformStructures).map((i) => uniformGroup.uniformStructures[i]);\n\n            const layout = createUBOElements(elements);\n\n            const syncFunction = generateUniformBufferSync(layout.uboElements);\n\n            uniformData = this._syncFunctionHash[uniformGroupSignature] = {\n                layout,\n                syncFunction\n            };\n        }\n\n        uniformGroup._syncFunction = uniformData.syncFunction;\n\n        uniformGroup.buffer = new Buffer({\n            data: new Float32Array(uniformData.layout.size / 4),\n            usage: BufferUsage.UNIFORM | BufferUsage.COPY_DST,\n        });\n\n        return uniformGroup._syncFunction;\n    }\n\n    syncUniformGroup(uniformGroup: UniformGroup, data?: Float32Array, offset?: number): boolean\n    {\n        const syncFunction = uniformGroup._syncFunction || this.initUniformGroup(uniformGroup);\n\n        data ||= (uniformGroup.buffer.data as Float32Array);\n        offset ||= 0;\n\n        syncFunction(uniformGroup.uniforms, data, offset);\n\n        return true;\n    }\n\n    updateUniformGroup(uniformGroup: UniformGroup): boolean\n    {\n        if (uniformGroup.isStatic && !uniformGroup.dirtyId) return false;\n        uniformGroup.dirtyId = 0;\n\n        const synced = this.syncUniformGroup(uniformGroup);\n\n        uniformGroup.buffer.update();\n\n        return synced;\n    }\n\n    destroy(): void\n    {\n        throw new Error('Method not implemented.');\n    }\n}\n"],"names":[],"mappings":";;;;;;AAYO,MAAM,mBACb,CAAA;AAAA,EAmBI,YAAY,QACZ,EAAA;AANA;AAAA,IAAA,IAAA,CAAQ,oBAGH,EAAC,CAAA;AAIF,IAAA,IAAA,CAAK,QAAW,GAAA,QAAA,CAAA;AAAA,GACpB;AAAA,EAEA,mBAAmB,YACnB,EAAA;AACI,IAAI,IAAA,CAAC,aAAa,aAClB,EAAA;AACI,MAAA,IAAA,CAAK,iBAAiB,YAAY,CAAA,CAAA;AAAA,KACtC;AAAA,GACJ;AAAA,EAEA,iBAAiB,YACjB,EAAA;AACI,IAAA,MAAM,wBAAwB,YAAa,CAAA,SAAA,CAAA;AAE3C,IAAI,IAAA,WAAA,GAAc,IAAK,CAAA,iBAAA,CAAkB,qBAAqB,CAAA,CAAA;AAE9D,IAAA,IAAI,CAAC,WACL,EAAA;AACI,MAAA,MAAM,QAAW,GAAA,MAAA,CAAO,IAAK,CAAA,YAAA,CAAa,iBAAiB,CAAA,CAAE,GAAI,CAAA,CAAC,CAAM,KAAA,YAAA,CAAa,iBAAkB,CAAA,CAAC,CAAC,CAAA,CAAA;AAEzG,MAAM,MAAA,MAAA,GAAS,kBAAkB,QAAQ,CAAA,CAAA;AAEzC,MAAM,MAAA,YAAA,GAAe,yBAA0B,CAAA,MAAA,CAAO,WAAW,CAAA,CAAA;AAEjE,MAAc,WAAA,GAAA,IAAA,CAAK,iBAAkB,CAAA,qBAAqB,CAAI,GAAA;AAAA,QAC1D,MAAA;AAAA,QACA,YAAA;AAAA,OACJ,CAAA;AAAA,KACJ;AAEA,IAAA,YAAA,CAAa,gBAAgB,WAAY,CAAA,YAAA,CAAA;AAEzC,IAAa,YAAA,CAAA,MAAA,GAAS,IAAI,MAAO,CAAA;AAAA,MAC7B,MAAM,IAAI,YAAA,CAAa,WAAY,CAAA,MAAA,CAAO,OAAO,CAAC,CAAA;AAAA,MAClD,KAAA,EAAO,WAAY,CAAA,OAAA,GAAU,WAAY,CAAA,QAAA;AAAA,KAC5C,CAAA,CAAA;AAED,IAAA,OAAO,YAAa,CAAA,aAAA,CAAA;AAAA,GACxB;AAAA,EAEA,gBAAA,CAAiB,YAA4B,EAAA,IAAA,EAAqB,MAClE,EAAA;AACI,IAAA,MAAM,YAAe,GAAA,YAAA,CAAa,aAAiB,IAAA,IAAA,CAAK,iBAAiB,YAAY,CAAA,CAAA;AAErF,IAAA,IAAA,KAAA,IAAA,GAAU,aAAa,MAAO,CAAA,IAAA,CAAA,CAAA;AAC9B,IAAW,MAAA,KAAA,MAAA,GAAA,CAAA,CAAA,CAAA;AAEX,IAAa,YAAA,CAAA,YAAA,CAAa,QAAU,EAAA,IAAA,EAAM,MAAM,CAAA,CAAA;AAEhD,IAAO,OAAA,IAAA,CAAA;AAAA,GACX;AAAA,EAEA,mBAAmB,YACnB,EAAA;AACI,IAAI,IAAA,YAAA,CAAa,QAAY,IAAA,CAAC,YAAa,CAAA,OAAA;AAAS,MAAO,OAAA,KAAA,CAAA;AAC3D,IAAA,YAAA,CAAa,OAAU,GAAA,CAAA,CAAA;AAEvB,IAAM,MAAA,MAAA,GAAS,IAAK,CAAA,gBAAA,CAAiB,YAAY,CAAA,CAAA;AAEjD,IAAA,YAAA,CAAa,OAAO,MAAO,EAAA,CAAA;AAE3B,IAAO,OAAA,MAAA,CAAA;AAAA,GACX;AAAA,EAEA,OACA,GAAA;AACI,IAAM,MAAA,IAAI,MAAM,yBAAyB,CAAA,CAAA;AAAA,GAC7C;AACJ,CAAA;AAAA;AA3Fa,mBAAA,CAGF,SAAY,GAAA;AAAA,EACf,IAAM,EAAA;AAAA,IACF,aAAc,CAAA,WAAA;AAAA,IACd,aAAc,CAAA,YAAA;AAAA,IACd,aAAc,CAAA,YAAA;AAAA,GAClB;AAAA,EACA,IAAM,EAAA,eAAA;AACV,CAAA;;;;"}