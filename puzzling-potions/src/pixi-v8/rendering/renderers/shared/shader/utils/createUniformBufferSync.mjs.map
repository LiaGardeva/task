{"version":3,"file":"createUniformBufferSync.mjs","sources":["../../../../../../src/rendering/renderers/shared/shader/utils/createUniformBufferSync.ts"],"sourcesContent":["/* eslint-disable quote-props */\nimport { WGSL_TO_STD40_SIZE } from './createUBOElements';\nimport { uniformBufferParsers } from './uniformBufferParsers';\n\nimport type { UBOElement } from './createUBOElements';\n\nexport type UniformsSyncCallback = (...args: any[]) => void;\n\nconst UBO_TO_SINGLE_SETTERS: Record<string, string> = {\n    'f32': `\n        data[offset] = v;\n    `,\n    'vec2<f32>': `\n        data[offset] = v[0];\n        data[offset+1] = v[1];\n    `,\n    'vec3<f32>': `\n        data[offset] = v[0];\n        data[offset+1] = v[1];\n        data[offset+2] = v[2];\n\n    `,\n    'vec4<f32>': `\n        data[offset] = v[0];\n        data[offset+1] = v[1];\n        data[offset+2] = v[2];\n        data[offset+3] = v[3];\n    `,\n    'mat2x2<f32>': `\n        data[offset] = v[0];\n        data[offset+1] = v[1];\n\n        data[offset+4] = v[2];\n        data[offset+5] = v[3];\n    `,\n    'mat3x3<f32>': `\n        data[offset] = v[0];\n        data[offset+1] = v[1];\n        data[offset+2] = v[2];\n\n        data[offset + 4] = v[3];\n        data[offset + 5] = v[4];\n        data[offset + 6] = v[5];\n\n        data[offset + 8] = v[6];\n        data[offset + 9] = v[7];\n        data[offset + 10] = v[8];\n    `,\n    'mat4x4<f32>': `\n        for(var i = 0; i < 16; i++)\n        {\n            data[offset + i] = v[i];\n        }\n    `,\n};\n\n// const WGSL_TO_SIZE: Dict<number> = {\n//     float:    1,\n//     vec2:     2,\n//     vec3:     3,\n//     vec4:     4,\n\n//     int:      1,\n//     ivec2:    2,\n//     ivec3:    3,\n//     ivec4:    4,\n\n//     uint:     1,\n//     uvec2:    2,\n//     uvec3:    3,\n//     uvec4:    4,\n\n//     bool:     1,\n//     bvec2:    2,\n//     bvec3:    3,\n//     bvec4:    4,\n\n//     mat2:     4,\n//     mat3:     9,\n//     mat4:     16,\n// };\n\nexport function generateUniformBufferSync(\n    uboElements: UBOElement[],\n): UniformsSyncCallback\n{\n    const funcFragments = [`\n        var v = null;\n        var v2 = null;\n        var t = 0;\n        var index = 0;\n    `];\n\n    let prev = 0;\n\n    for (let i = 0; i < uboElements.length; i++)\n    {\n        const uboElement = uboElements[i];\n\n        const name = uboElement.data.name;\n\n        let parsed = false;\n        let offset = 0;\n\n        for (let j = 0; j < uniformBufferParsers.length; j++)\n        {\n            const uniformParser = uniformBufferParsers[j];\n\n            if (uniformParser.test(uboElement.data))\n            {\n                offset = uboElement.offset / 4;\n\n                funcFragments.push(\n                    `offset += ${offset - prev};`,\n                    uniformBufferParsers[j].code(name));\n                parsed = true;\n\n                break;\n            }\n        }\n\n        if (!parsed)\n        {\n            if (uboElement.data.size > 1)\n            {\n                const rowSize = Math.max(WGSL_TO_STD40_SIZE[uboElement.data.type] / 16, 1);\n                const elementSize = (uboElement.data.value as Array<number>).length / uboElement.data.size;// size / rowSize;\n\n                const remainder = (4 - (elementSize % 4)) % 4;\n\n                offset = uboElement.offset / 4;\n\n                funcFragments.push(/* wgsl */`\n                    v = uv.${name};\n                    offset += ${offset - prev};\n\n                    t = 0;\n\n                    for(var i=0; i < ${uboElement.data.size * rowSize}; i++)\n                    {\n                        for(var j = 0; j < ${elementSize}; j++)\n                        {\n                            data[offset++] = v[t++];\n                        }\n                        offset += ${remainder};\n                    }\n                `);\n            }\n            else\n            {\n                const template = UBO_TO_SINGLE_SETTERS[uboElement.data.type];\n\n                offset = uboElement.offset / 4;\n\n                funcFragments.push(/* wgsl */`\n                    v = uv.${name};\n                    offset += ${offset - prev};\n                    ${template};\n                `);\n            }\n        }\n\n        prev = offset;\n    }\n\n    const fragmentSrc = funcFragments.join('\\n');\n\n    // eslint-disable-next-line no-new-func\n    return new Function(\n        'uv',\n        'data',\n        'offset',\n        fragmentSrc,\n    ) as UniformsSyncCallback;\n}\n"],"names":[],"mappings":"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"}