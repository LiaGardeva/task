{"version":3,"file":"TextureLayout.js","sources":["../../../../../src/rendering/renderers/shared/texture/TextureLayout.ts"],"sourcesContent":["import EventEmitter from 'eventemitter3';\nimport { groupD8 } from '../../../../maths/groupD8';\nimport { Rectangle } from '../../../../maths/shapes/Rectangle';\n\nexport interface TextureLayoutOptions\n{\n    frame?: Rectangle;\n    orig?: Rectangle;\n    trim?: Rectangle;\n    defaultAnchor?: { x: number; y: number };\n    rotate?: number;\n}\n\nexport type UVs = {\n    x0: number;\n    y0: number;\n    x1: number;\n    y1: number;\n    x2: number;\n    y2: number;\n    x3: number;\n    y3: number;\n};\n\nexport class TextureLayout extends EventEmitter<{\n    update: TextureLayout\n    destroy: TextureLayout\n}>\n{\n    frame: Rectangle;\n    orig: Rectangle;\n\n    rotate: number;\n    uvs: UVs = { x0: 0, y0: 0, x1: 0, y1: 0, x2: 0, y2: 0, x3: 0, y3: 0 };\n\n    trim?: Rectangle;\n    defaultAnchor?: { x: number; y: number };\n\n    constructor(options: TextureLayoutOptions = {})\n    {\n        super();\n\n        this.frame = options.frame || new Rectangle(0, 0, 1, 1);\n        this.orig = options.orig || this.frame;\n\n        this.rotate = options.rotate ?? 0;\n\n        // optional\n        this.trim = options.trim;\n        this.defaultAnchor = options.defaultAnchor;\n\n        this.updateUvs();\n    }\n\n    updateUvs()\n    {\n        const uvs = this.uvs;\n        const frame = this.frame;\n        let rotate = this.rotate;\n\n        if (rotate)\n        {\n            // width and height div 2 div baseFrame size\n            const w2 = frame.width / 2;\n            const h2 = frame.height / 2;\n\n            // coordinates of center\n            const cX = frame.x + w2;\n            const cY = frame.y + h2;\n\n            rotate = groupD8.add(rotate, groupD8.NW); // NW is top-left corner\n            uvs.x0 = cX + (w2 * groupD8.uX(rotate));\n            uvs.y0 = cY + (h2 * groupD8.uY(rotate));\n\n            rotate = groupD8.add(rotate, 2); // rotate 90 degrees clockwise\n            uvs.x1 = cX + (w2 * groupD8.uX(rotate));\n            uvs.y1 = cY + (h2 * groupD8.uY(rotate));\n\n            rotate = groupD8.add(rotate, 2);\n            uvs.x2 = cX + (w2 * groupD8.uX(rotate));\n            uvs.y2 = cY + (h2 * groupD8.uY(rotate));\n\n            rotate = groupD8.add(rotate, 2);\n            uvs.x3 = cX + (w2 * groupD8.uX(rotate));\n            uvs.y3 = cY + (h2 * groupD8.uY(rotate));\n        }\n\n        else\n        {\n            uvs.x0 = frame.x;\n            uvs.y0 = frame.y;\n            uvs.x1 = frame.x + frame.width;\n            uvs.y1 = frame.y;\n            uvs.x2 = frame.x + frame.width;\n            uvs.y2 = frame.y + frame.height;\n            uvs.x3 = frame.x;\n            uvs.y3 = frame.y + frame.height;\n        }\n    }\n\n    update()\n    {\n        this.updateUvs();\n        this.emit('update', this);\n    }\n\n    /** Destroys this TextureLayout */\n    destroy()\n    {\n        this.emit('destroy', this);\n        this.removeAllListeners();\n        this.frame = null;\n        this.orig = null;\n        this.trim = null;\n        this.defaultAnchor = null;\n        this.uvs = null;\n    }\n}\n"],"names":["EventEmitter","Rectangle","groupD8"],"mappings":"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"}