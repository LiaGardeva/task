{"version":3,"file":"LayerGroup.js","sources":["../../../src/rendering/scene/LayerGroup.ts"],"sourcesContent":["import { Matrix } from '../../maths/Matrix';\nimport { InstructionSet } from '../renderers/shared/instructions/InstructionSet';\n\nimport type { Instruction } from '../renderers/shared/instructions/Instruction';\nimport type { LayerRenderable } from '../renderers/shared/LayerRenderable';\nimport type { Renderable } from '../renderers/shared/Renderable';\nimport type { View } from '../renderers/shared/View';\nimport type { Container } from './Container';\n\nexport class LayerGroup implements Instruction\n{\n    type = 'layer';\n    root: Container = null;\n    rootRenderable: Renderable<View> = null;\n\n    canBundle = false;\n\n    layerGroupParent: LayerGroup = null;\n    layerGroupChildren: LayerGroup[] = [];\n\n    children: Container[] = [];\n\n    //    layerTransform: Matrix = new Matrix();\n    worldTransform: Matrix = new Matrix();\n    worldColor = 0xffffffff;\n\n    // these updates are transform changes..\n    readonly childrenToUpdate: Record<number, { list: Container[]; index: number; }> = {};\n    updateTick = 0;\n\n    // these update are renderable changes..\n    readonly childrenRenderablesToUpdate: { list: Renderable[]; index: number; } = { list: [], index: 0 };\n\n    // other\n    structureDidChange = true;\n\n    instructionSet: InstructionSet = new InstructionSet();\n\n    /**\n     * proxy renderable is used to render the root containers view if it has one\n     * this is used as we do not want to inherit the transform / color of the root container\n     * it is only used by the parent root layer group\n     */\n    proxyRenderable: LayerRenderable<View>;\n\n    constructor(root: Container)\n    {\n        this.root = root;\n\n        this.addChild(root);\n    }\n\n    get localTransform()\n    {\n        return this.root.localTransform;\n    }\n\n    get layerTransform()\n    {\n        return this.root.layerTransform;\n    }\n\n    addLayerGroupChild(layerGroupChild: LayerGroup)\n    {\n        if (layerGroupChild.layerGroupParent)\n        {\n            layerGroupChild.layerGroupParent.removeLayerGroupChild(layerGroupChild);\n        }\n\n        layerGroupChild.layerGroupParent = this;\n\n        this.onChildUpdate(layerGroupChild.root);\n\n        this.layerGroupChildren.push(layerGroupChild);\n    }\n\n    removeLayerGroupChild(layerGroupChild: LayerGroup)\n    {\n        if (layerGroupChild.root.didChange)\n        {\n            this.removeChildFromUpdate(layerGroupChild.root);\n        }\n\n        const index = this.layerGroupChildren.indexOf(layerGroupChild);\n\n        if (index > -1)\n        {\n            this.layerGroupChildren.splice(index, 1);\n        }\n\n        layerGroupChild.layerGroupParent = null;\n    }\n\n    addChild(child: Container)\n    {\n        this.structureDidChange = true;\n\n        // TODO this can be optimized..\n        if (child !== this.root)\n        {\n            this.children.push(child);\n\n            child.updateTick = -1;\n\n            if (child.parent === this.root)\n            {\n                child.relativeLayerDepth = 1;\n            }\n\n            else\n            {\n                child.relativeLayerDepth = child.parent.relativeLayerDepth + 1;\n            }\n\n            if (child._onRender)\n            {\n                this.addOnRender(child);\n            }\n        }\n\n        if (child.layerGroup)\n        {\n            if (child.layerGroup.root === child)\n            {\n                // its already its own layer group..\n                this.addLayerGroupChild(child.layerGroup);\n\n                return;\n            }\n        }\n        else\n        {\n            child.layerGroup = this;\n            child.didChange = true;\n        }\n\n        const children = child.children;\n\n        if (!child.isLayerRoot)\n        {\n            this.onChildUpdate(child);\n        }\n\n        for (let i = 0; i < children.length; i++)\n        {\n            this.addChild(children[i]);\n        }\n    }\n\n    removeChild(child: Container)\n    {\n        // remove all the children...\n        this.structureDidChange = true;\n\n        if (child._onRender)\n        {\n            this.removeOnRender(child);\n        }\n\n        if (child.layerGroup.root !== child)\n        {\n            const children = child.children;\n\n            for (let i = 0; i < children.length; i++)\n            {\n                this.removeChild(children[i]);\n            }\n\n            if (child.didChange)\n            {\n                child.layerGroup.removeChildFromUpdate(child);\n            }\n\n            child.layerGroup = null;\n        }\n\n        else\n        {\n            this.removeLayerGroupChild(child.layerGroup);\n        }\n\n        const index = this.children.indexOf(child);\n\n        if (index > -1)\n        {\n            this.children.splice(index, 1);\n        }\n    }\n\n    onChildUpdate(child: Container)\n    {\n        let childrenToUpdate = this.childrenToUpdate[child.relativeLayerDepth];\n\n        if (!childrenToUpdate)\n        {\n            childrenToUpdate = this.childrenToUpdate[child.relativeLayerDepth] = {\n                index: 0,\n                list: [],\n            };\n        }\n\n        childrenToUpdate.list[childrenToUpdate.index++] = child;\n    }\n\n    // SHOULD THIS BE HERE?\n    updateRenderable(container: Renderable)\n    {\n        // only update if its visible!\n        if (container.layerVisibleRenderable < 0b11) return;\n\n        container.didViewUpdate = false;\n        // actually updates the renderable..\n        this.instructionSet.renderPipes[container.view.type].updateRenderable(container);\n    }\n\n    onChildViewUpdate(child: Renderable)\n    {\n        this.childrenRenderablesToUpdate.list[this.childrenRenderablesToUpdate.index++] = child;\n    }\n\n    removeChildFromUpdate(child: Container)\n    {\n        const childrenToUpdate = this.childrenToUpdate[child.relativeLayerDepth];\n\n        if (!childrenToUpdate)\n        { return; }\n\n        const index = childrenToUpdate.list.indexOf(child);\n\n        // TODO this should be optimized - don't really want to change array size on the fly if we can avoid!\n        if (index > -1)\n        {\n            childrenToUpdate.list.splice(index, 1);\n        }\n\n        childrenToUpdate.index--;\n    }\n\n    get isRenderable(): boolean\n    {\n        const worldAlpha = ((this.worldColor >> 24) & 0xFF);\n\n        return (this.root.localVisibleRenderable === 0b11 && worldAlpha > 0);\n    }\n\n    onRenderContainers: Container[] = [];\n\n    /**\n     * adding a container to the onRender list will make sure the user function\n     * passed in to the user defined 'onRender` callBack\n     * @param container - the container to add to the onRender list\n     */\n    addOnRender(container: Container)\n    {\n        this.onRenderContainers.push(container);\n    }\n\n    removeOnRender(container: Container)\n    {\n        this.onRenderContainers.splice(this.onRenderContainers.indexOf(container), 1);\n    }\n\n    runOnRender()\n    {\n        this.onRenderContainers.forEach((container) =>\n        {\n            container._onRender();\n        });\n    }\n}\n"],"names":["Matrix","InstructionSet"],"mappings":"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"}