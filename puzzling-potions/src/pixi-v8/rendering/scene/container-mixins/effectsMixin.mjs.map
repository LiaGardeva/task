{"version":3,"file":"effectsMixin.mjs","sources":["../../../../src/rendering/scene/container-mixins/effectsMixin.ts"],"sourcesContent":["import { getFilterEffect, returnFilterEffect } from '../../filters/FilterEffect';\nimport { MaskEffectManager } from '../../mask/shared/MaskEffectManager';\n\nimport type { Filter } from '../../filters/Filter';\nimport type { FilterEffect } from '../../filters/FilterEffect';\nimport type { Container } from '../Container';\nimport type { Effect } from '../Effect';\n\nexport interface EffectsMixin\n{\n    _mask?: {mask: unknown, effect: Effect};\n    _filters?: {filters: Filter[], effect: FilterEffect};\n\n    mask: number | Container;\n    filters: Filter[];\n}\n\nexport const effectsMixin: Partial<Container> = {\n    _mask: null,\n    _filters: null,\n\n    set mask(value: unknown)\n    {\n        this._mask ||= { mask: null, effect: null };\n\n        if (this._mask.mask === value) return;\n\n        if (this._mask.effect)\n        {\n            this.removeEffect(this._mask.effect);\n\n            MaskEffectManager.returnMaskEffect(this._mask.effect);\n\n            this._mask.effect = null;\n        }\n\n        this._mask.mask = value;\n\n        if (value === null || value === undefined) return;\n\n        const effect = MaskEffectManager.getMaskEffect(value);\n\n        this._mask.effect = effect;\n\n        this.addEffect(effect);\n    },\n\n    get mask(): unknown\n    {\n        return this._mask?.mask;\n    },\n\n    set filters(value: Filter | Filter[])\n    {\n        if (!Array.isArray(value) && value !== null) value = [value];\n\n        // TODO - not massively important, but could optimise here\n        // by reusing the same effect.. rather than adding and removing from the pool!\n        this._filters ||= { filters: null, effect: null };\n\n        if (this._filters.filters === value) return;\n\n        if (this._filters.effect)\n        {\n            this.removeEffect(this._filters.effect);\n            returnFilterEffect(this._filters.effect);\n            this._filters.effect = null;\n        }\n\n        this._filters.filters = value as Filter[];\n\n        if (!value) return;\n\n        const effect = getFilterEffect(value as Filter[]);\n\n        this._filters.effect = effect;\n\n        this.addEffect(effect);\n    },\n\n    get filters(): Filter[]\n    {\n        return this._filters?.filters;\n    }\n} as Container;\n"],"names":[],"mappings":";;;AAiBO,MAAM,YAAmC,GAAA;AAAA,EAC5C,KAAO,EAAA,IAAA;AAAA,EACP,QAAU,EAAA,IAAA;AAAA,EAEV,IAAI,KAAK,KACT,EAAA;AACI,IAAA,IAAA,CAAK,UAAL,IAAK,CAAA,KAAA,GAAU,EAAE,IAAM,EAAA,IAAA,EAAM,QAAQ,IAAK,EAAA,CAAA,CAAA;AAE1C,IAAI,IAAA,IAAA,CAAK,MAAM,IAAS,KAAA,KAAA;AAAO,MAAA,OAAA;AAE/B,IAAI,IAAA,IAAA,CAAK,MAAM,MACf,EAAA;AACI,MAAK,IAAA,CAAA,YAAA,CAAa,IAAK,CAAA,KAAA,CAAM,MAAM,CAAA,CAAA;AAEnC,MAAkB,iBAAA,CAAA,gBAAA,CAAiB,IAAK,CAAA,KAAA,CAAM,MAAM,CAAA,CAAA;AAEpD,MAAA,IAAA,CAAK,MAAM,MAAS,GAAA,IAAA,CAAA;AAAA,KACxB;AAEA,IAAA,IAAA,CAAK,MAAM,IAAO,GAAA,KAAA,CAAA;AAElB,IAAI,IAAA,KAAA,KAAU,QAAQ,KAAU,KAAA,KAAA,CAAA;AAAW,MAAA,OAAA;AAE3C,IAAM,MAAA,MAAA,GAAS,iBAAkB,CAAA,aAAA,CAAc,KAAK,CAAA,CAAA;AAEpD,IAAA,IAAA,CAAK,MAAM,MAAS,GAAA,MAAA,CAAA;AAEpB,IAAA,IAAA,CAAK,UAAU,MAAM,CAAA,CAAA;AAAA,GACzB;AAAA,EAEA,IAAI,IACJ,GAAA;AACI,IAAA,OAAO,KAAK,KAAO,EAAA,IAAA,CAAA;AAAA,GACvB;AAAA,EAEA,IAAI,QAAQ,KACZ,EAAA;AACI,IAAA,IAAI,CAAC,KAAA,CAAM,OAAQ,CAAA,KAAK,KAAK,KAAU,KAAA,IAAA;AAAM,MAAA,KAAA,GAAQ,CAAC,KAAK,CAAA,CAAA;AAI3D,IAAA,IAAA,CAAK,aAAL,IAAK,CAAA,QAAA,GAAa,EAAE,OAAS,EAAA,IAAA,EAAM,QAAQ,IAAK,EAAA,CAAA,CAAA;AAEhD,IAAI,IAAA,IAAA,CAAK,SAAS,OAAY,KAAA,KAAA;AAAO,MAAA,OAAA;AAErC,IAAI,IAAA,IAAA,CAAK,SAAS,MAClB,EAAA;AACI,MAAK,IAAA,CAAA,YAAA,CAAa,IAAK,CAAA,QAAA,CAAS,MAAM,CAAA,CAAA;AACtC,MAAmB,kBAAA,CAAA,IAAA,CAAK,SAAS,MAAM,CAAA,CAAA;AACvC,MAAA,IAAA,CAAK,SAAS,MAAS,GAAA,IAAA,CAAA;AAAA,KAC3B;AAEA,IAAA,IAAA,CAAK,SAAS,OAAU,GAAA,KAAA,CAAA;AAExB,IAAA,IAAI,CAAC,KAAA;AAAO,MAAA,OAAA;AAEZ,IAAM,MAAA,MAAA,GAAS,gBAAgB,KAAiB,CAAA,CAAA;AAEhD,IAAA,IAAA,CAAK,SAAS,MAAS,GAAA,MAAA,CAAA;AAEvB,IAAA,IAAA,CAAK,UAAU,MAAM,CAAA,CAAA;AAAA,GACzB;AAAA,EAEA,IAAI,OACJ,GAAA;AACI,IAAA,OAAO,KAAK,QAAU,EAAA,OAAA,CAAA;AAAA,GAC1B;AACJ;;;;"}