{"version":3,"file":"measureMixin.js","sources":["../../../../src/rendering/scene/container-mixins/measureMixin.ts"],"sourcesContent":["import { Matrix } from '../../../maths/Matrix';\nimport { Bounds } from '../bounds/Bounds';\nimport { getGlobalBounds } from '../bounds/getGlobalBounds';\nimport { getLocalBounds } from '../bounds/getLocalBounds';\n\nimport type { Rectangle } from '../../../maths/shapes/Rectangle';\nimport type { Container } from '../Container';\n\nexport interface MeasureMixin\n{\n    width: number;\n    height: number;\n\n    getLocalBounds(): Rectangle;\n    getBounds(skipUpdate?: boolean): Rectangle;\n}\n\nconst tempBounds = new Bounds();\nconst tempMatrix = new Matrix();\n\nexport const measureMixin: Partial<Container> = {\n\n    get width(): number\n    {\n        return this.scale.x * getLocalBounds(this, tempBounds, tempMatrix).width;\n    },\n\n    set width(value: number)\n    {\n        this.scale.x = value / getLocalBounds(this, tempBounds, tempMatrix).width;\n    },\n\n    get height(): number\n    {\n        return this.scale.y * getLocalBounds(this, tempBounds, tempMatrix).height;\n    },\n\n    set height(value: number)\n    {\n        this.scale.y = value / getLocalBounds(this, tempBounds, tempMatrix).height;\n    },\n\n    /**\n     * Retrieves the local bounds of the displayObject as a Bounds object.\n     * @returns - The bounding area.\n     */\n    getLocalBounds(): Rectangle\n    {\n        return getLocalBounds(this, tempBounds, this.localTransform).rectangle;\n    },\n\n    /**\n     * Calculates and returns the (world) bounds of the display object as a [Rectangle]{@link PIXI.Rectangle}.\n     * @param skipUpdate - Setting to `true` will stop the transforms of the scene graph from\n     *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n     *  nice performance boost.\n     * @returns - The minimum axis-aligned rectangle in world space that fits around this object.\n     */\n    getBounds(skipUpdate?: boolean): Rectangle\n    {\n        return getGlobalBounds(this, skipUpdate, tempBounds).rectangle;\n    }\n\n} as Container;\n"],"names":["Bounds","Matrix","getLocalBounds","getGlobalBounds"],"mappings":";;;;;;;;;AAiBA,MAAM,UAAA,GAAa,IAAIA,aAAO,EAAA,CAAA;AAC9B,MAAM,UAAA,GAAa,IAAIC,aAAO,EAAA,CAAA;AAEvB,MAAM,YAAmC,GAAA;AAAA,EAE5C,IAAI,KACJ,GAAA;AACI,IAAA,OAAO,KAAK,KAAM,CAAA,CAAA,GAAIC,8BAAe,IAAM,EAAA,UAAA,EAAY,UAAU,CAAE,CAAA,KAAA,CAAA;AAAA,GACvE;AAAA,EAEA,IAAI,MAAM,KACV,EAAA;AACI,IAAA,IAAA,CAAK,MAAM,CAAI,GAAA,KAAA,GAAQA,8BAAe,IAAM,EAAA,UAAA,EAAY,UAAU,CAAE,CAAA,KAAA,CAAA;AAAA,GACxE;AAAA,EAEA,IAAI,MACJ,GAAA;AACI,IAAA,OAAO,KAAK,KAAM,CAAA,CAAA,GAAIA,8BAAe,IAAM,EAAA,UAAA,EAAY,UAAU,CAAE,CAAA,MAAA,CAAA;AAAA,GACvE;AAAA,EAEA,IAAI,OAAO,KACX,EAAA;AACI,IAAA,IAAA,CAAK,MAAM,CAAI,GAAA,KAAA,GAAQA,8BAAe,IAAM,EAAA,UAAA,EAAY,UAAU,CAAE,CAAA,MAAA,CAAA;AAAA,GACxE;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,cACA,GAAA;AACI,IAAA,OAAOA,6BAAe,CAAA,IAAA,EAAM,UAAY,EAAA,IAAA,CAAK,cAAc,CAAE,CAAA,SAAA,CAAA;AAAA,GACjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,UAAU,UACV,EAAA;AACI,IAAA,OAAOC,+BAAgB,CAAA,IAAA,EAAM,UAAY,EAAA,UAAU,CAAE,CAAA,SAAA,CAAA;AAAA,GACzD;AAEJ;;;;"}