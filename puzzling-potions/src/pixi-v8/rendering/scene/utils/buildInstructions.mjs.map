{"version":3,"file":"buildInstructions.mjs","sources":["../../../../src/rendering/scene/utils/buildInstructions.ts"],"sourcesContent":["import { LayerRenderable } from '../../renderers/shared/LayerRenderable';\n\nimport type { InstructionSet } from '../../renderers/shared/instructions/InstructionSet';\nimport type { RenderPipe } from '../../renderers/shared/instructions/RenderPipe';\nimport type { Renderable } from '../../renderers/shared/Renderable';\nimport type { RenderPipes } from '../../renderers/types';\nimport type { Container } from '../Container';\nimport type { LayerGroup } from '../LayerGroup';\n\nexport function buildInstructions(layerGroup: LayerGroup, renderPipes: RenderPipes)\n{\n    const root = layerGroup.root;\n    const instructionSet = layerGroup.instructionSet;\n\n    instructionSet.reset();\n\n    // TODO add some events / runners for build start\n    renderPipes.batch.buildStart(instructionSet);\n    renderPipes.blendMode.buildStart();\n    renderPipes.colorMask.buildStart();\n\n    if (layerGroup.root.view)\n    {\n        // proxy renderable is needed here as we do not want to inherit the transform / color of the root container\n        const proxyRenderable = layerGroup.proxyRenderable ?? initProxyRenderable(layerGroup);\n\n        if (proxyRenderable)\n        {\n            renderPipes.blendMode.setBlendMode(proxyRenderable, proxyRenderable.layerBlendMode, instructionSet);\n\n            // eslint-disable-next-line max-len\n            (renderPipes[proxyRenderable.view.type as keyof RenderPipes] as any).addRenderable(proxyRenderable, instructionSet);\n        }\n    }\n\n    if (root.sortChildren)\n    {\n        root.sortChildrenDepth();\n    }\n\n    const children = root.children;\n\n    const length = children.length;\n\n    for (let i = 0; i < length; i++)\n    {\n        collectAllRenderables(children[i], instructionSet, renderPipes);\n    }\n\n    // TODO add some events / runners for build end\n    renderPipes.batch.buildEnd(instructionSet);\n    renderPipes.blendMode.buildEnd(instructionSet);\n}\n\nexport function collectAllRenderables(\n    container: Container,\n    instructionSet: InstructionSet,\n    rendererPipes: RenderPipes\n): void\n{\n    // if there is 0b01 or 0b10 the return value\n\n    if (container.layerVisibleRenderable < 0b11 || !container.includeInBuild) return;\n\n    if (container.sortChildren)\n    {\n        container.sortChildrenDepth();\n    }\n\n    if (container.isSimple)\n    {\n        collectAllRenderablesSimple(container, instructionSet, rendererPipes);\n    }\n    else\n    {\n        collectAllRenderablesAdvanced(container, instructionSet, rendererPipes);\n    }\n}\n\nfunction collectAllRenderablesSimple(\n    container: Container,\n    instructionSet: InstructionSet,\n    renderPipes: RenderPipes\n): void\n{\n    const view = container.view;\n\n    if (view)\n    {\n        // TODO add blends in\n        renderPipes.blendMode.setBlendMode(container as Renderable, container.layerBlendMode, instructionSet);\n\n        container.didViewUpdate = false;\n\n        const rp = renderPipes as unknown as Record<string, RenderPipe>;\n\n        rp[view.type].addRenderable(container, instructionSet);\n    }\n\n    if (!container.isLayerRoot)\n    {\n        const children = container.children;\n        const length = children.length;\n\n        for (let i = 0; i < length; i++)\n        {\n            collectAllRenderables(children[i], instructionSet, renderPipes);\n        }\n    }\n}\n\nfunction collectAllRenderablesAdvanced(\n    container: Container,\n    instructionSet: InstructionSet,\n    renderPipes: RenderPipes\n): void\n{\n    for (let i = 0; i < container.effects.length; i++)\n    {\n        const effect = container.effects[i];\n\n        (renderPipes[effect.pipe as keyof RenderPipes] as any).push(effect, container, instructionSet);\n    }\n\n    if (container.isLayerRoot)\n    {\n        renderPipes.layer.addLayerGroup(container.layerGroup, instructionSet);\n    }\n    else\n    {\n        const view = container.view;\n\n        if (view)\n        {\n            // TODO add blends in\n            renderPipes.blendMode.setBlendMode(container as Renderable, container.layerBlendMode, instructionSet);\n\n            container.didViewUpdate = false;\n\n            (renderPipes[view.type as keyof RenderPipes] as any).addRenderable(container, instructionSet);\n        }\n\n        const children = container.children;\n\n        if (children.length)\n        {\n            for (let i = 0; i < children.length; i++)\n            {\n                collectAllRenderables(children[i], instructionSet, renderPipes);\n            }\n        }\n    }\n\n    // loop backwards through effects\n    for (let i = container.effects.length - 1; i >= 0; i--)\n    {\n        const effect = container.effects[i];\n\n        (renderPipes[effect.pipe as keyof RenderPipes] as any).pop(effect, container, instructionSet);\n    }\n}\n\nfunction initProxyRenderable(layerGroup: LayerGroup)\n{\n    const root = layerGroup.root;\n\n    if (root.view)\n    {\n        layerGroup.proxyRenderable = new LayerRenderable({\n            original: root,\n            view: root.view,\n        });\n    }\n}\n"],"names":[],"mappings":"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"}