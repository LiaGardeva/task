{"version":3,"file":"BatchableSprite.js","sources":["../../../../src/rendering/sprite/shared/BatchableSprite.ts"],"sourcesContent":["import type { Batch, BatchableObject, Batcher } from '../../batcher/shared/Batcher';\nimport type { Renderable } from '../../renderers/shared/Renderable';\nimport type { Texture } from '../../renderers/shared/texture/Texture';\nimport type { View } from '../../renderers/shared/View';\n\nexport class BatchableSprite implements BatchableObject\n{\n    visible: boolean;\n    indexStart: number;\n    sprite: Renderable<View>;\n\n    // batch specific..\n    vertexSize = 4;\n    indexSize = 6;\n\n    texture: Texture;\n\n    textureId: number;\n    location = 0; // location in the buffer\n    batcher: Batcher = null;\n    batch: Batch = null;\n    bounds: [number, number, number, number];\n\n    get blendMode() { return this.sprite.layerBlendMode; }\n\n    packAttributes(\n        float32View: Float32Array,\n        uint32View: Uint32Array,\n        index: number,\n        textureId: number,\n    )\n    {\n        const sprite = this.sprite;\n        const texture = this.texture;\n\n        const wt = sprite.layerTransform;\n\n        const a = wt.a;\n        const b = wt.b;\n        const c = wt.c;\n        const d = wt.d;\n        const tx = wt.tx;\n        const ty = wt.ty;\n\n        const bounds = this.bounds;\n\n        const w0 = bounds[0];\n        const w1 = bounds[1];\n        const h0 = bounds[2];\n        const h1 = bounds[3];\n\n        const uvs = texture._layout.uvs;\n\n        // _ _ _ _\n        // a b g r\n        const argb = sprite.layerColor;\n\n        // xy\n        float32View[index++] = (a * w1) + (c * h1) + tx;\n        float32View[index++] = (d * h1) + (b * w1) + ty;\n\n        float32View[index++] = uvs.x0;// [0];\n        float32View[index++] = uvs.y0;// [1];\n\n        uint32View[index++] = argb;\n        float32View[index++] = textureId;\n\n        // xy\n        float32View[index++] = (a * w0) + (c * h1) + tx;\n        float32View[index++] = (d * h1) + (b * w0) + ty;\n\n        float32View[index++] = uvs.x1;// [2];\n        float32View[index++] = uvs.y1;// [3];\n\n        uint32View[index++] = argb;\n        float32View[index++] = textureId;\n\n        // xy\n        float32View[index++] = (a * w0) + (c * h0) + tx;\n        float32View[index++] = (d * h0) + (b * w0) + ty;\n\n        float32View[index++] = uvs.x2;\n        float32View[index++] = uvs.y2;\n\n        uint32View[index++] = argb;\n        float32View[index++] = textureId;\n\n        // xy\n        float32View[index++] = (a * w1) + (c * h0) + tx;\n        float32View[index++] = (d * h0) + (b * w1) + ty;\n\n        float32View[index++] = uvs.x3;\n        float32View[index++] = uvs.y3;\n\n        uint32View[index++] = argb;\n        float32View[index++] = textureId;\n    }\n\n    packIndex(indexBuffer: Uint32Array, index: number, indicesOffset: number)\n    {\n        indexBuffer[index++] = indicesOffset + 0;\n        indexBuffer[index++] = indicesOffset + 1;\n        indexBuffer[index++] = indicesOffset + 2;\n\n        indexBuffer[index++] = indicesOffset + 0;\n        indexBuffer[index++] = indicesOffset + 2;\n        indexBuffer[index++] = indicesOffset + 3;\n    }\n\n    reset()\n    {\n        this.sprite = null;\n        this.texture = null;\n        this.batcher = null;\n        this.batch = null;\n        this.bounds = null;\n    }\n}\n"],"names":[],"mappings":"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"}