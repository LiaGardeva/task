{"version":3,"file":"SpritePipe.mjs","sources":["../../../../src/rendering/sprite/shared/SpritePipe.ts"],"sourcesContent":["import { ExtensionType } from '../../../extensions/Extensions';\nimport { BigPool } from '../../../utils/pool/PoolGroup';\nimport { BatchableSprite } from './BatchableSprite';\n\nimport type { PoolItem } from '../../../utils/pool/Pool';\nimport type { InstructionSet } from '../../renderers/shared/instructions/InstructionSet';\nimport type { RenderPipe } from '../../renderers/shared/instructions/RenderPipe';\nimport type { Renderable } from '../../renderers/shared/Renderable';\nimport type { Renderer } from '../../renderers/types';\nimport type { SpriteView } from './SpriteView';\n\nlet gpuSpriteHash: Record<number, BatchableSprite>;\n\nexport class SpritePipe implements RenderPipe<SpriteView>\n{\n    /** @ignore */\n    static extension = {\n        type: [\n            ExtensionType.WebGLPipes,\n            ExtensionType.WebGPUPipes,\n            ExtensionType.CanvasPipes,\n        ],\n        name: 'sprite',\n    } as const;\n\n    private renderer: Renderer;\n    private gpuSpriteHash: Record<number, BatchableSprite> = {};\n\n    constructor(renderer: Renderer)\n    {\n        this.renderer = renderer;\n        gpuSpriteHash = this.gpuSpriteHash;\n    }\n\n    addRenderable(renderable: Renderable<SpriteView>, instructionSet: InstructionSet)\n    {\n        const gpuSprite = this.getGpuSprite(renderable);\n\n        if (renderable.view.didUpdate) this.updateBatchableSprite(renderable, gpuSprite);\n\n        // TODO visibility\n        this.renderer.renderPipes.batch.addToBatch(gpuSprite, instructionSet);\n    }\n\n    updateRenderable(renderable: Renderable<SpriteView>)\n    {\n        const gpuSprite = gpuSpriteHash[renderable.uid];\n\n        if (renderable.view.didUpdate) this.updateBatchableSprite(renderable, gpuSprite);\n\n        gpuSprite.batcher.updateElement(gpuSprite);\n    }\n\n    validateRenderable(renderable: Renderable<SpriteView>): boolean\n    {\n        const texture = renderable.view._texture;\n        const gpuSprite = this.getGpuSprite(renderable);\n\n        if (gpuSprite.texture._source !== texture._source)\n        {\n            return !gpuSprite.batcher.checkAndUpdateTexture(gpuSprite, texture);\n        }\n\n        return false;\n    }\n\n    destroyRenderable(renderable: Renderable<SpriteView>)\n    {\n        const batchableSprite = gpuSpriteHash[renderable.uid];\n\n        // this will call reset!\n        BigPool.return(batchableSprite as PoolItem);\n\n        gpuSpriteHash[renderable.uid] = null;\n    }\n\n    updateBatchableSprite(renderable: Renderable<SpriteView>, batchableSprite: BatchableSprite)\n    {\n        const view = renderable.view;\n\n        view.didUpdate = false;\n        batchableSprite.bounds = view.bounds;\n        batchableSprite.texture = view._texture;\n    }\n\n    getGpuSprite(renderable: Renderable<SpriteView>): BatchableSprite\n    {\n        return gpuSpriteHash[renderable.uid] || this.initGPUSprite(renderable);\n    }\n\n    initGPUSprite(renderable: Renderable<SpriteView>): BatchableSprite\n    {\n        const batchableSprite = BigPool.get(BatchableSprite);\n\n        batchableSprite.sprite = renderable;\n        batchableSprite.texture = renderable.view._texture;\n        batchableSprite.bounds = renderable.view.bounds;\n\n        gpuSpriteHash[renderable.uid] = batchableSprite;\n\n        renderable.view.didUpdate = false;\n\n        // TODO perhaps manage this outside this pipe? (a bit like how we update / add)\n        renderable.on('destroyed', () =>\n        {\n            this.destroyRenderable(renderable);\n        });\n\n        return batchableSprite;\n    }\n\n    destroy()\n    {\n        for (const i in this.gpuSpriteHash)\n        {\n            BigPool.return(this.gpuSpriteHash[i] as PoolItem);\n        }\n\n        this.gpuSpriteHash = null;\n        this.renderer = null;\n    }\n}\n"],"names":[],"mappings":"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"}