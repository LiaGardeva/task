{"version":3,"file":"BitmapFont.js","sources":["../../../../src/rendering/text/bitmap/BitmapFont.ts"],"sourcesContent":["import EventEmitter from 'eventemitter3';\nimport { Rectangle } from '../../../maths/shapes/Rectangle';\nimport { Texture } from '../../renderers/shared/texture/Texture';\n\nimport type { FontMetrics } from '../canvas/CanvasTextMetrics';\nimport type { TextStyle } from '../TextStyle';\nimport type { IBitmapFont } from './DynamicBitmapFont';\n\nexport interface CharData\n{\n    id: number\n    xOffset: number\n    yOffset: number\n    xAdvance: number,\n    kerning: Record<string, number>,\n    texture?: Texture\n}\n\nexport interface RawCharData\n{\n    id: number\n    page: number\n    xOffset: number\n    yOffset: number\n    xAdvance: number,\n    x: number\n    y: number\n    width: number\n    height: number\n    letter: string\n    kerning: Record<string, number>,\n}\n\nexport interface BitmapFontData\n{\n    baseLineOffset: number;\n    chars: Record<string, RawCharData>\n    pages: {id: number, file: string}[]\n    lineHeight: number\n    fontSize: number\n    fontName: string\n\n    distanceField?: {\n        fieldType: 'sdf' | 'msdf' | 'none'\n        distanceRange: number\n    }\n}\n\nexport interface BitmapFontOptions\n{\n    data: BitmapFontData\n    textures: Texture[]\n}\n\nexport interface DynamicBitmapFontData\n{\n    style: TextStyle\n}\n\nexport class BitmapFont extends EventEmitter<{\n    destroy: BitmapFont\n}> implements IBitmapFont\n{\n    baseRenderedFontSize = 100;\n    baseMeasurementFontSize = 100;\n\n    pages: {texture: Texture}[] = [];\n\n    chars: Record<string, CharData> = {};\n\n    lineHeight = 0;\n\n    fontMetrics: FontMetrics;\n    fontName: string;\n\n    baseLineOffset = 0;\n\n    distanceField: {\n        fieldType: string;\n        distanceRange: number;\n    };\n\n    constructor(options: BitmapFontOptions)\n    {\n        super();\n\n        this.pages = [];\n\n        const { textures, data } = options;\n\n        Object.keys(data.pages).forEach((key: string) =>\n        {\n            const pageData = data.pages[parseInt(key, 10)];\n\n            const texture = textures[pageData.id];\n\n            this.pages.push({ texture });\n        });\n\n        Object.keys(data.chars).forEach((key: string) =>\n        {\n            const charData = data.chars[key];\n            const textureSource = textures[charData.page].source;\n\n            const frame = new Rectangle(\n                (charData.x) / textureSource.width,\n                (charData.y) / textureSource.height,\n                (charData.width) / textureSource.width,\n                (charData.height) / textureSource.height,\n            );\n\n            const texture = new Texture({\n                source: textureSource,\n                layout: {\n                    frame\n                }\n            });\n\n            this.chars[key] = {\n                id: key.codePointAt(0),\n                xOffset: charData.xOffset,\n                yOffset: charData.yOffset, // - 31, // + 61 - 87,\n                xAdvance: charData.xAdvance,\n                kerning: charData.kerning ?? {},\n                texture,\n            };\n        });\n\n        this.fontMetrics = {\n            ascent: 0,\n            descent: 0,\n            fontSize: data.fontSize,\n        };\n\n        this.baseLineOffset = data.baseLineOffset;\n        this.lineHeight = data.lineHeight; //* (100 / 35);// 1.3);\n        this.fontName = data.fontName;\n\n        this.baseMeasurementFontSize = data.fontSize;\n        this.baseRenderedFontSize = data.fontSize;\n\n        this.distanceField = data.distanceField ?? {\n            fieldType: 'none',\n            distanceRange: 0,\n        };\n    }\n\n    destroy(): void\n    {\n        this.emit('destroy', this);\n\n        this.removeAllListeners();\n\n        for (const i in this.chars)\n        {\n            this.chars[i].texture.destroy();\n        }\n\n        this.chars = null;\n\n        for (let i = 0; i < this.pages.length; i++)\n        {\n            const { texture } = this.pages[i];\n\n            texture.destroy(true);\n        }\n\n        this.pages = null;\n    }\n}\n"],"names":["EventEmitter","Rectangle","Texture"],"mappings":"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"}