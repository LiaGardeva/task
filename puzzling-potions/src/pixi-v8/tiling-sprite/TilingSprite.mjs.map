{"version":3,"file":"TilingSprite.mjs","sources":["../../src/tiling-sprite/TilingSprite.ts"],"sourcesContent":["import { Container } from '../rendering/scene/Container';\nimport { TilingSpriteView } from './TilingSpriteView';\n\nimport type { ContainerOptions } from '../rendering/scene/Container';\nimport type { TilingSpriteViewOptions } from './TilingSpriteView';\n\nexport type TilingSpriteOptions = TilingSpriteViewOptions & ContainerOptions<TilingSpriteView>;\n\nexport class TilingSprite extends Container<TilingSpriteView>\n{\n    constructor(options?: TilingSpriteOptions)\n    {\n        super({\n            view: new TilingSpriteView(options),\n            label: 'TilingSprite',\n            ...options\n        });\n    }\n\n    set texture(value)\n    {\n        this.view.texture = value;\n    }\n\n    get texture()\n    {\n        return this.view.texture;\n    }\n\n    get anchor()\n    {\n        return this.view.anchor;\n    }\n\n    get width(): number\n    {\n        return this.view.width;\n    }\n\n    set width(value: number)\n    {\n        this.view.width = value;\n    }\n\n    get height(): number\n    {\n        return this.view.height;\n    }\n\n    set height(value: number)\n    {\n        this.view.height = value;\n    }\n\n    get tilePosition()\n    {\n        return this.view.tileTransform.position;\n    }\n\n    set tilePosition(value)\n    {\n        this.view.tileTransform.position.copyFrom(value);\n    }\n\n    get tileScale()\n    {\n        return this.view.tileTransform.scale;\n    }\n\n    set tileScale(value)\n    {\n        this.view.tileTransform.scale.copyFrom(value);\n    }\n\n    set tileRotation(value)\n    {\n        this.view.tileTransform.rotation = value;\n    }\n\n    get tileRotation()\n    {\n        return this.view.tileTransform.rotation;\n    }\n\n    get tileTransform()\n    {\n        return this.view.tileTransform;\n    }\n}\n\n"],"names":[],"mappings":";;;AAQO,MAAM,qBAAqB,SAClC,CAAA;AAAA,EACI,YAAY,OACZ,EAAA;AACI,IAAM,KAAA,CAAA;AAAA,MACF,IAAA,EAAM,IAAI,gBAAA,CAAiB,OAAO,CAAA;AAAA,MAClC,KAAO,EAAA,cAAA;AAAA,MACP,GAAG,OAAA;AAAA,KACN,CAAA,CAAA;AAAA,GACL;AAAA,EAEA,IAAI,QAAQ,KACZ,EAAA;AACI,IAAA,IAAA,CAAK,KAAK,OAAU,GAAA,KAAA,CAAA;AAAA,GACxB;AAAA,EAEA,IAAI,OACJ,GAAA;AACI,IAAA,OAAO,KAAK,IAAK,CAAA,OAAA,CAAA;AAAA,GACrB;AAAA,EAEA,IAAI,MACJ,GAAA;AACI,IAAA,OAAO,KAAK,IAAK,CAAA,MAAA,CAAA;AAAA,GACrB;AAAA,EAEA,IAAI,KACJ,GAAA;AACI,IAAA,OAAO,KAAK,IAAK,CAAA,KAAA,CAAA;AAAA,GACrB;AAAA,EAEA,IAAI,MAAM,KACV,EAAA;AACI,IAAA,IAAA,CAAK,KAAK,KAAQ,GAAA,KAAA,CAAA;AAAA,GACtB;AAAA,EAEA,IAAI,MACJ,GAAA;AACI,IAAA,OAAO,KAAK,IAAK,CAAA,MAAA,CAAA;AAAA,GACrB;AAAA,EAEA,IAAI,OAAO,KACX,EAAA;AACI,IAAA,IAAA,CAAK,KAAK,MAAS,GAAA,KAAA,CAAA;AAAA,GACvB;AAAA,EAEA,IAAI,YACJ,GAAA;AACI,IAAO,OAAA,IAAA,CAAK,KAAK,aAAc,CAAA,QAAA,CAAA;AAAA,GACnC;AAAA,EAEA,IAAI,aAAa,KACjB,EAAA;AACI,IAAA,IAAA,CAAK,IAAK,CAAA,aAAA,CAAc,QAAS,CAAA,QAAA,CAAS,KAAK,CAAA,CAAA;AAAA,GACnD;AAAA,EAEA,IAAI,SACJ,GAAA;AACI,IAAO,OAAA,IAAA,CAAK,KAAK,aAAc,CAAA,KAAA,CAAA;AAAA,GACnC;AAAA,EAEA,IAAI,UAAU,KACd,EAAA;AACI,IAAA,IAAA,CAAK,IAAK,CAAA,aAAA,CAAc,KAAM,CAAA,QAAA,CAAS,KAAK,CAAA,CAAA;AAAA,GAChD;AAAA,EAEA,IAAI,aAAa,KACjB,EAAA;AACI,IAAK,IAAA,CAAA,IAAA,CAAK,cAAc,QAAW,GAAA,KAAA,CAAA;AAAA,GACvC;AAAA,EAEA,IAAI,YACJ,GAAA;AACI,IAAO,OAAA,IAAA,CAAK,KAAK,aAAc,CAAA,QAAA,CAAA;AAAA,GACnC;AAAA,EAEA,IAAI,aACJ,GAAA;AACI,IAAA,OAAO,KAAK,IAAK,CAAA,aAAA,CAAA;AAAA,GACrB;AACJ;;;;"}