{"version":3,"file":"TilingSpriteView.js","sources":["../../src/tiling-sprite/TilingSpriteView.ts"],"sourcesContent":["import { ObservablePoint } from '../maths/ObservablePoint';\nimport { Texture } from '../rendering/renderers/shared/texture/Texture';\nimport { emptyViewObserver } from '../rendering/renderers/shared/View';\nimport { NOOP } from '../utils/NOOP';\nimport { Transform } from '../utils/Transform';\n\nimport type { PointData } from '../maths/PointData';\nimport type { View } from '../rendering/renderers/shared/View';\nimport type { Bounds } from '../rendering/scene/bounds/Bounds';\nimport type { TextureDestroyOptions, TypeOrBool } from '../rendering/scene/destroyTypes';\n\nlet uid = 0;\n\nexport interface TilingSpriteViewOptions\n{\n    texture?: Texture\n    width?: number\n    height?: number\n    // TODO needs a better name..\n    applyAnchorToTexture?: boolean\n}\n\nexport class TilingSpriteView implements View\n{\n    static defaultOptions: TilingSpriteViewOptions = {\n        texture: Texture.WHITE,\n        width: 256,\n        height: 256,\n        applyAnchorToTexture: false,\n    };\n\n    batched = true;\n\n    owner = emptyViewObserver;\n\n    uid = uid++;\n\n    type = 'tilingSprite';\n\n    onRenderableUpdate = NOOP;\n\n    _bounds: [number, number, number, number] = [0, 1, 0, 0];\n\n    boundsDirty = true;\n\n    anchor: ObservablePoint;\n    _texture: Texture;\n\n    tileTransform: Transform;\n    applyAnchorToTexture: boolean;\n\n    private _width: number;\n    private _height: number;\n    didUpdate: boolean;\n\n    constructor(options: TilingSpriteViewOptions)\n    {\n        options = { ...TilingSpriteView.defaultOptions, ...options };\n\n        this.anchor = new ObservablePoint(this, 0, 0);\n\n        this.applyAnchorToTexture = options.applyAnchorToTexture;\n\n        this.texture = options.texture;\n        this._width = options.width;\n        this._height = options.height;\n\n        this.tileTransform = new Transform({ observer: this });\n    }\n\n    get bounds()\n    {\n        if (this.boundsDirty)\n        {\n            this.updateBounds();\n            this.boundsDirty = false;\n        }\n\n        return this._bounds;\n    }\n\n    updateBounds()\n    {\n        const bounds = this._bounds;\n\n        const anchor = this.anchor;\n\n        const width = this._width;\n        const height = this._height;\n\n        bounds[1] = -anchor._x * width;\n        bounds[0] = bounds[1] + width;\n\n        bounds[3] = -anchor._y * height;\n        bounds[2] = bounds[3] + height;\n    }\n\n    addBounds(bounds: Bounds)\n    {\n        const _bounds = this.bounds;\n\n        bounds.addFrame(\n            _bounds[0],\n            _bounds[2],\n            _bounds[1],\n            _bounds[3],\n        );\n    }\n\n    set texture(value: Texture)\n    {\n        if (this._texture === value) return;\n\n        this._texture = value;\n\n        this.onUpdate();\n    }\n\n    get texture()\n    {\n        return this._texture;\n    }\n\n    set width(value: number)\n    {\n        this._width = value;\n        this.onUpdate();\n    }\n\n    get width()\n    {\n        return this._width;\n    }\n\n    set height(value: number)\n    {\n        this._height = value;\n        this.onUpdate();\n    }\n\n    get height()\n    {\n        return this._height;\n    }\n\n    /**\n     * @internal\n     */\n    onUpdate()\n    {\n        this.boundsDirty = true;\n        this.didUpdate = true;\n        this.owner.onViewUpdate();\n    }\n\n    public containsPoint(point: PointData)\n    {\n        const width = this.bounds[2];\n        const height = this.bounds[3];\n        const x1 = -width * this.anchor.x;\n        let y1 = 0;\n\n        if (point.x >= x1 && point.x < x1 + width)\n        {\n            y1 = -height * this.anchor.y;\n\n            if (point.y >= y1 && point.y < y1 + height) return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Destroys this sprite renderable and optionally its texture.\n     * @param options - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.texture=false] - Should it destroy the current texture of the renderable as well\n     * @param {boolean} [options.textureSource=false] - Should it destroy the textureSource of the renderable as well\n     */\n    public destroy(options: TypeOrBool<TextureDestroyOptions> = false)\n    {\n        this.onRenderableUpdate = NOOP;\n        this.anchor = null;\n        this.tileTransform = null;\n\n        this._bounds = null;\n\n        const destroyTexture = typeof options === 'boolean' ? options : options?.texture;\n\n        if (destroyTexture)\n        {\n            const destroyTextureSource = typeof options === 'boolean' ? options : options?.textureSource;\n\n            this._texture.destroy(destroyTextureSource);\n        }\n\n        this._texture = null;\n    }\n}\n"],"names":["emptyViewObserver","NOOP","ObservablePoint","Transform","Texture"],"mappings":";;;;;;;;;;AAWA,IAAI,GAAM,GAAA,CAAA,CAAA;AAWH,MAAM,oBAAN,MACP;AAAA,EAgCI,YAAY,OACZ,EAAA;AAzBA,IAAU,IAAA,CAAA,OAAA,GAAA,IAAA,CAAA;AAEV,IAAQ,IAAA,CAAA,KAAA,GAAAA,sBAAA,CAAA;AAER,IAAM,IAAA,CAAA,GAAA,GAAA,GAAA,EAAA,CAAA;AAEN,IAAO,IAAA,CAAA,IAAA,GAAA,cAAA,CAAA;AAEP,IAAqB,IAAA,CAAA,kBAAA,GAAAC,SAAA,CAAA;AAErB,IAAA,IAAA,CAAA,OAAA,GAA4C,CAAC,CAAA,EAAG,CAAG,EAAA,CAAA,EAAG,CAAC,CAAA,CAAA;AAEvD,IAAc,IAAA,CAAA,WAAA,GAAA,IAAA,CAAA;AAcV,IAAA,OAAA,GAAU,EAAE,GAAG,iBAAiB,CAAA,cAAA,EAAgB,GAAG,OAAQ,EAAA,CAAA;AAE3D,IAAA,IAAA,CAAK,MAAS,GAAA,IAAIC,+BAAgB,CAAA,IAAA,EAAM,GAAG,CAAC,CAAA,CAAA;AAE5C,IAAA,IAAA,CAAK,uBAAuB,OAAQ,CAAA,oBAAA,CAAA;AAEpC,IAAA,IAAA,CAAK,UAAU,OAAQ,CAAA,OAAA,CAAA;AACvB,IAAA,IAAA,CAAK,SAAS,OAAQ,CAAA,KAAA,CAAA;AACtB,IAAA,IAAA,CAAK,UAAU,OAAQ,CAAA,MAAA,CAAA;AAEvB,IAAA,IAAA,CAAK,gBAAgB,IAAIC,mBAAA,CAAU,EAAE,QAAA,EAAU,MAAM,CAAA,CAAA;AAAA,GACzD;AAAA,EAEA,IAAI,MACJ,GAAA;AACI,IAAA,IAAI,KAAK,WACT,EAAA;AACI,MAAA,IAAA,CAAK,YAAa,EAAA,CAAA;AAClB,MAAA,IAAA,CAAK,WAAc,GAAA,KAAA,CAAA;AAAA,KACvB;AAEA,IAAA,OAAO,IAAK,CAAA,OAAA,CAAA;AAAA,GAChB;AAAA,EAEA,YACA,GAAA;AACI,IAAA,MAAM,SAAS,IAAK,CAAA,OAAA,CAAA;AAEpB,IAAA,MAAM,SAAS,IAAK,CAAA,MAAA,CAAA;AAEpB,IAAA,MAAM,QAAQ,IAAK,CAAA,MAAA,CAAA;AACnB,IAAA,MAAM,SAAS,IAAK,CAAA,OAAA,CAAA;AAEpB,IAAA,MAAA,CAAO,CAAC,CAAA,GAAI,CAAC,MAAA,CAAO,EAAK,GAAA,KAAA,CAAA;AACzB,IAAA,MAAA,CAAO,CAAC,CAAA,GAAI,MAAO,CAAA,CAAC,CAAI,GAAA,KAAA,CAAA;AAExB,IAAA,MAAA,CAAO,CAAC,CAAA,GAAI,CAAC,MAAA,CAAO,EAAK,GAAA,MAAA,CAAA;AACzB,IAAA,MAAA,CAAO,CAAC,CAAA,GAAI,MAAO,CAAA,CAAC,CAAI,GAAA,MAAA,CAAA;AAAA,GAC5B;AAAA,EAEA,UAAU,MACV,EAAA;AACI,IAAA,MAAM,UAAU,IAAK,CAAA,MAAA,CAAA;AAErB,IAAO,MAAA,CAAA,QAAA;AAAA,MACH,QAAQ,CAAC,CAAA;AAAA,MACT,QAAQ,CAAC,CAAA;AAAA,MACT,QAAQ,CAAC,CAAA;AAAA,MACT,QAAQ,CAAC,CAAA;AAAA,KACb,CAAA;AAAA,GACJ;AAAA,EAEA,IAAI,QAAQ,KACZ,EAAA;AACI,IAAA,IAAI,KAAK,QAAa,KAAA,KAAA;AAAO,MAAA,OAAA;AAE7B,IAAA,IAAA,CAAK,QAAW,GAAA,KAAA,CAAA;AAEhB,IAAA,IAAA,CAAK,QAAS,EAAA,CAAA;AAAA,GAClB;AAAA,EAEA,IAAI,OACJ,GAAA;AACI,IAAA,OAAO,IAAK,CAAA,QAAA,CAAA;AAAA,GAChB;AAAA,EAEA,IAAI,MAAM,KACV,EAAA;AACI,IAAA,IAAA,CAAK,MAAS,GAAA,KAAA,CAAA;AACd,IAAA,IAAA,CAAK,QAAS,EAAA,CAAA;AAAA,GAClB;AAAA,EAEA,IAAI,KACJ,GAAA;AACI,IAAA,OAAO,IAAK,CAAA,MAAA,CAAA;AAAA,GAChB;AAAA,EAEA,IAAI,OAAO,KACX,EAAA;AACI,IAAA,IAAA,CAAK,OAAU,GAAA,KAAA,CAAA;AACf,IAAA,IAAA,CAAK,QAAS,EAAA,CAAA;AAAA,GAClB;AAAA,EAEA,IAAI,MACJ,GAAA;AACI,IAAA,OAAO,IAAK,CAAA,OAAA,CAAA;AAAA,GAChB;AAAA;AAAA;AAAA;AAAA,EAKA,QACA,GAAA;AACI,IAAA,IAAA,CAAK,WAAc,GAAA,IAAA,CAAA;AACnB,IAAA,IAAA,CAAK,SAAY,GAAA,IAAA,CAAA;AACjB,IAAA,IAAA,CAAK,MAAM,YAAa,EAAA,CAAA;AAAA,GAC5B;AAAA,EAEO,cAAc,KACrB,EAAA;AACI,IAAM,MAAA,KAAA,GAAQ,IAAK,CAAA,MAAA,CAAO,CAAC,CAAA,CAAA;AAC3B,IAAM,MAAA,MAAA,GAAS,IAAK,CAAA,MAAA,CAAO,CAAC,CAAA,CAAA;AAC5B,IAAA,MAAM,EAAK,GAAA,CAAC,KAAQ,GAAA,IAAA,CAAK,MAAO,CAAA,CAAA,CAAA;AAChC,IAAA,IAAI,EAAK,GAAA,CAAA,CAAA;AAET,IAAA,IAAI,MAAM,CAAK,IAAA,EAAA,IAAM,KAAM,CAAA,CAAA,GAAI,KAAK,KACpC,EAAA;AACI,MAAK,EAAA,GAAA,CAAC,MAAS,GAAA,IAAA,CAAK,MAAO,CAAA,CAAA,CAAA;AAE3B,MAAA,IAAI,KAAM,CAAA,CAAA,IAAK,EAAM,IAAA,KAAA,CAAM,IAAI,EAAK,GAAA,MAAA;AAAQ,QAAO,OAAA,IAAA,CAAA;AAAA,KACvD;AAEA,IAAO,OAAA,KAAA,CAAA;AAAA,GACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASO,OAAA,CAAQ,UAA6C,KAC5D,EAAA;AACI,IAAA,IAAA,CAAK,kBAAqB,GAAAF,SAAA,CAAA;AAC1B,IAAA,IAAA,CAAK,MAAS,GAAA,IAAA,CAAA;AACd,IAAA,IAAA,CAAK,aAAgB,GAAA,IAAA,CAAA;AAErB,IAAA,IAAA,CAAK,OAAU,GAAA,IAAA,CAAA;AAEf,IAAA,MAAM,cAAiB,GAAA,OAAO,OAAY,KAAA,SAAA,GAAY,UAAU,OAAS,EAAA,OAAA,CAAA;AAEzE,IAAA,IAAI,cACJ,EAAA;AACI,MAAA,MAAM,oBAAuB,GAAA,OAAO,OAAY,KAAA,SAAA,GAAY,UAAU,OAAS,EAAA,aAAA,CAAA;AAE/E,MAAK,IAAA,CAAA,QAAA,CAAS,QAAQ,oBAAoB,CAAA,CAAA;AAAA,KAC9C;AAEA,IAAA,IAAA,CAAK,QAAW,GAAA,IAAA,CAAA;AAAA,GACpB;AACJ,CAAA,CAAA;AAhLO,IAAM,gBAAN,GAAA,kBAAA;AAAM,gBAAA,CAEF,cAA0C,GAAA;AAAA,EAC7C,SAASG,eAAQ,CAAA,KAAA;AAAA,EACjB,KAAO,EAAA,GAAA;AAAA,EACP,MAAQ,EAAA,GAAA;AAAA,EACR,oBAAsB,EAAA,KAAA;AAC1B,CAAA;;;;"}