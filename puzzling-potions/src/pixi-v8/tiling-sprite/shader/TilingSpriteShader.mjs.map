{"version":3,"file":"TilingSpriteShader.mjs","sources":["../../../src/tiling-sprite/shader/TilingSpriteShader.ts"],"sourcesContent":["import { Matrix } from '../../maths/Matrix';\nimport { GlProgram } from '../../rendering/renderers/gl/shader/GlProgram';\nimport { GpuProgram } from '../../rendering/renderers/gpu/shader/GpuProgram';\nimport { Shader } from '../../rendering/renderers/shared/shader/Shader';\nimport { UniformGroup } from '../../rendering/renderers/shared/shader/UniformGroup';\nimport programFrag from './tiling-sprite.frag';\nimport programVert from './tiling-sprite.vert';\nimport programWgsl from './tiling-sprite.wgsl';\n\nimport type { TextureShader } from '../../rendering/mesh/shared/MeshView';\nimport type { Texture } from '../../rendering/renderers/shared/texture/Texture';\n\ninterface TilingSpriteOptions\n{\n    texture: Texture;\n}\n\nexport class TilingSpriteShader extends Shader implements TextureShader\n{\n    private _texture: Texture;\n\n    constructor(options: TilingSpriteOptions)\n    {\n        const glProgram = GlProgram.from({\n            vertex: programVert,\n            fragment: programFrag,\n            name: 'tiling-sprite',\n        });\n\n        const gpuProgram = GpuProgram.from({\n            vertex: {\n                source: programWgsl,\n                entryPoint: 'mainVertex',\n            },\n            fragment: {\n                source: programWgsl,\n                entryPoint: 'mainFragment',\n            }\n        });\n\n        // This is added automatically by the mesh pixi and the mesh renderer...\n        // const localUniforms = new UniformGroup({\n        //     color: { value: new Float32Array([1, 1, 1, 1]), type: 'vec4<f32>' },\n        //     transformMatrix: { value: new Matrix(), type: 'mat3x3<f32>' },\n        // });\n\n        const tilingUniforms = new UniformGroup({\n            uMapCoord: { value: new Matrix(), type: 'mat3x3<f32>' },\n            uClampFrame: { value: new Float32Array([0, 0, 1, 1]), type: 'vec4<f32>' },\n            uClampOffset: { value: new Float32Array([0, 0]), type: 'vec2<f32>' },\n            uTextureTransform: { value: new Matrix(), type: 'mat3x3<f32>' },\n            uSizeAnchor: { value: new Float32Array([100, 200, 0.5, 0.5]), type: 'vec4<f32>' },\n        });\n\n        super({\n            glProgram,\n            gpuProgram,\n            resources: {\n                tilingUniforms,\n                uTexture: options.texture.source,\n                uSampler: options.texture.style,\n            }\n        });\n    }\n\n    get texture(): Texture\n    {\n        return this._texture;\n    }\n\n    set texture(value: Texture)\n    {\n        if (this._texture === value) return;\n\n        this._texture = value;\n\n        this.resources.uTexture = value.source;\n        this.resources.uSampler = value.style;\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;AAiBO,MAAM,2BAA2B,MACxC,CAAA;AAAA,EAGI,YAAY,OACZ,EAAA;AACI,IAAM,MAAA,SAAA,GAAY,UAAU,IAAK,CAAA;AAAA,MAC7B,MAAQ,EAAA,WAAA;AAAA,MACR,QAAU,EAAA,WAAA;AAAA,MACV,IAAM,EAAA,eAAA;AAAA,KACT,CAAA,CAAA;AAED,IAAM,MAAA,UAAA,GAAa,WAAW,IAAK,CAAA;AAAA,MAC/B,MAAQ,EAAA;AAAA,QACJ,MAAQ,EAAA,WAAA;AAAA,QACR,UAAY,EAAA,YAAA;AAAA,OAChB;AAAA,MACA,QAAU,EAAA;AAAA,QACN,MAAQ,EAAA,WAAA;AAAA,QACR,UAAY,EAAA,cAAA;AAAA,OAChB;AAAA,KACH,CAAA,CAAA;AAQD,IAAM,MAAA,cAAA,GAAiB,IAAI,YAAa,CAAA;AAAA,MACpC,WAAW,EAAE,KAAA,EAAO,IAAI,MAAO,EAAA,EAAG,MAAM,aAAc,EAAA;AAAA,MACtD,WAAa,EAAA,EAAE,KAAO,EAAA,IAAI,YAAa,CAAA,CAAC,CAAG,EAAA,CAAA,EAAG,CAAG,EAAA,CAAC,CAAC,CAAA,EAAG,MAAM,WAAY,EAAA;AAAA,MACxE,YAAA,EAAc,EAAE,KAAA,EAAO,IAAI,YAAA,CAAa,CAAC,CAAA,EAAG,CAAC,CAAC,CAAG,EAAA,IAAA,EAAM,WAAY,EAAA;AAAA,MACnE,mBAAmB,EAAE,KAAA,EAAO,IAAI,MAAO,EAAA,EAAG,MAAM,aAAc,EAAA;AAAA,MAC9D,WAAa,EAAA,EAAE,KAAO,EAAA,IAAI,YAAa,CAAA,CAAC,GAAK,EAAA,GAAA,EAAK,GAAK,EAAA,GAAG,CAAC,CAAA,EAAG,MAAM,WAAY,EAAA;AAAA,KACnF,CAAA,CAAA;AAED,IAAM,KAAA,CAAA;AAAA,MACF,SAAA;AAAA,MACA,UAAA;AAAA,MACA,SAAW,EAAA;AAAA,QACP,cAAA;AAAA,QACA,QAAA,EAAU,QAAQ,OAAQ,CAAA,MAAA;AAAA,QAC1B,QAAA,EAAU,QAAQ,OAAQ,CAAA,KAAA;AAAA,OAC9B;AAAA,KACH,CAAA,CAAA;AAAA,GACL;AAAA,EAEA,IAAI,OACJ,GAAA;AACI,IAAA,OAAO,IAAK,CAAA,QAAA,CAAA;AAAA,GAChB;AAAA,EAEA,IAAI,QAAQ,KACZ,EAAA;AACI,IAAA,IAAI,KAAK,QAAa,KAAA,KAAA;AAAO,MAAA,OAAA;AAE7B,IAAA,IAAA,CAAK,QAAW,GAAA,KAAA,CAAA;AAEhB,IAAK,IAAA,CAAA,SAAA,CAAU,WAAW,KAAM,CAAA,MAAA,CAAA;AAChC,IAAK,IAAA,CAAA,SAAA,CAAU,WAAW,KAAM,CAAA,KAAA,CAAA;AAAA,GACpC;AACJ;;;;"}