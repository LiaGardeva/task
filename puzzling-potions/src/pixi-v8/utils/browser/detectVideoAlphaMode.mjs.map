{"version":3,"file":"detectVideoAlphaMode.mjs","sources":["../../../src/utils/browser/detectVideoAlphaMode.ts"],"sourcesContent":["import { ALPHA_MODES } from '../../rendering/renderers/shared/texture/const';\nimport { settings } from '../../settings/settings';\n\nlet promise: Promise<ALPHA_MODES> | undefined;\n\n/**\n * Helper for detecting the correct alpha mode for video textures.\n * For some reason, some browsers/devices/WebGL implementations premultiply the alpha\n * of a video before and then a second time if `UNPACK_PREMULTIPLY_ALPHA_WEBGL`\n * is true. So the video is premultiplied twice if the alpha mode is `UNPACK`.\n * In this case we need the alpha mode to be `PMA`. This function detects\n * the upload behavior by uploading a white 2x2 webm with 50% alpha\n * without `UNPACK_PREMULTIPLY_ALPHA_WEBGL` and then checking whether\n * the uploaded pixels are premultiplied.\n * @memberof PIXI.utils\n * @function detectVideoAlphaMode\n * @returns {Promise<PIXI.ALPHA_MODES>} The correct alpha mode for video textures.\n */\nexport async function detectVideoAlphaMode(): Promise<ALPHA_MODES>\n{\n    promise ??= (async () =>\n    {\n        const canvas = settings.ADAPTER.createCanvas();\n        const gl = canvas.getContext('webgl');\n\n        if (!gl)\n        {\n            return ALPHA_MODES.UNPACK;\n        }\n\n        const video = document.createElement('video');\n\n        video.autoplay = false;\n        video.crossOrigin = 'anonymous';\n        video.preload = 'auto';\n        video.src = URL.createObjectURL(new Blob([new Uint8Array([\n            0x1A, 0x45, 0xDF, 0xA3, 0x9F, 0x42, 0x86, 0x81, 0x01, 0x42, 0xF7, 0x81, 0x01, 0x42, 0xF2, 0x81,\n            0x04, 0x42, 0xF3, 0x81, 0x08, 0x42, 0x82, 0x84, 0x77, 0x65, 0x62, 0x6D, 0x42, 0x87, 0x81, 0x02,\n            0x42, 0x85, 0x81, 0x02, 0x18, 0x53, 0x80, 0x67, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xD3,\n            0x11, 0x4D, 0x9B, 0x74, 0xBA, 0x4D, 0xBB, 0x8B, 0x53, 0xAB, 0x84, 0x15, 0x49, 0xA9, 0x66, 0x53,\n            0xAC, 0x81, 0xA1, 0x4D, 0xBB, 0x8B, 0x53, 0xAB, 0x84, 0x16, 0x54, 0xAE, 0x6B, 0x53, 0xAC, 0x81,\n            0xC6, 0x4D, 0xBB, 0x8C, 0x53, 0xAB, 0x84, 0x12, 0x54, 0xC3, 0x67, 0x53, 0xAC, 0x82, 0x01, 0x17,\n            0x4D, 0xBB, 0x8C, 0x53, 0xAB, 0x84, 0x1C, 0x53, 0xBB, 0x6B, 0x53, 0xAC, 0x82, 0x01, 0xBD, 0xEC,\n            0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x15, 0x49, 0xA9, 0x66, 0xA0, 0x2A, 0xD7, 0xB1, 0x83, 0x0F, 0x42, 0x40, 0x4D, 0x80, 0x84,\n            0x4C, 0x61, 0x76, 0x66, 0x57, 0x41, 0x84, 0x4C, 0x61, 0x76, 0x66, 0x44, 0x89, 0x88, 0x40, 0x8F,\n            0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x54, 0xAE, 0x6B, 0xCC, 0xAE, 0x01, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x43, 0xD7, 0x81, 0x01, 0x73, 0xC5, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x01, 0x9C, 0x81, 0x00, 0x22, 0xB5, 0x9C, 0x83, 0x75, 0x6E, 0x64, 0x88, 0x81, 0x00, 0x86,\n            0x85, 0x56, 0x5F, 0x56, 0x50, 0x39, 0x83, 0x81, 0x01, 0x23, 0xE3, 0x83, 0x84, 0x3B, 0x9A, 0xCA,\n            0x00, 0xE0, 0x94, 0xB0, 0x81, 0x02, 0xBA, 0x81, 0x02, 0x9A, 0x81, 0x02, 0x53, 0xC0, 0x81, 0x01,\n            0x55, 0xB0, 0x84, 0x55, 0xB9, 0x81, 0x01, 0x12, 0x54, 0xC3, 0x67, 0xD5, 0x73, 0x73, 0xD2, 0x63,\n            0xC0, 0x8B, 0x63, 0xC5, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x67, 0xC8, 0x9C,\n            0x45, 0xA3, 0x87, 0x45, 0x4E, 0x43, 0x4F, 0x44, 0x45, 0x52, 0x44, 0x87, 0x8F, 0x4C, 0x61, 0x76,\n            0x63, 0x20, 0x6C, 0x69, 0x62, 0x76, 0x70, 0x78, 0x2D, 0x76, 0x70, 0x39, 0x67, 0xC8, 0xA2, 0x45,\n            0xA3, 0x88, 0x44, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x44, 0x87, 0x94, 0x30, 0x30, 0x3A,\n            0x30, 0x30, 0x3A, 0x30, 0x31, 0x2E, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00,\n            0x00, 0x1F, 0x43, 0xB6, 0x75, 0xC7, 0xE7, 0x81, 0x00, 0xA0, 0xC2, 0xA1, 0xA0, 0x81, 0x00, 0x00,\n            0x00, 0x82, 0x49, 0x83, 0x42, 0x00, 0x00, 0x10, 0x00, 0x16, 0x00, 0x38, 0x24, 0x1C, 0x18, 0x4A,\n            0x00, 0x00, 0x20, 0x20, 0x00, 0x11, 0xBF, 0xFF, 0xFF, 0x8A, 0xFE, 0x00, 0x00, 0x75, 0xA1, 0x9D,\n            0xA6, 0x9B, 0xEE, 0x81, 0x01, 0xA5, 0x96, 0x82, 0x49, 0x83, 0x42, 0x00, 0x00, 0x10, 0x00, 0x16,\n            0x00, 0x38, 0x24, 0x1C, 0x18, 0x4A, 0x00, 0x00, 0x20, 0x20, 0x00, 0x48, 0x40, 0x1C, 0x53, 0xBB,\n            0x6B, 0x91, 0xBB, 0x8F, 0xB3, 0x81, 0x00, 0xB7, 0x8A, 0xF7, 0x81, 0x01, 0xF1, 0x82, 0x01, 0x71,\n            0xF0, 0x81, 0x03\n        ])], { type: 'video/webm' }));\n        video.load();\n\n        await new Promise<void>((resolve) =>\n        {\n            function wait()\n            {\n                if (video.readyState <= 1)\n                {\n                    setTimeout(wait, 1);\n                }\n                else\n                {\n                    resolve();\n                }\n            }\n\n            wait();\n        });\n\n        const texture = gl.createTexture();\n\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        const framebuffer = gl.createFramebuffer();\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n        gl.framebufferTexture2D(\n            gl.FRAMEBUFFER,\n            gl.COLOR_ATTACHMENT0,\n            gl.TEXTURE_2D,\n            texture,\n            0\n        );\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, gl.NONE);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, video);\n\n        const pixel = new Uint8Array(4);\n\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel);\n\n        gl.deleteFramebuffer(framebuffer);\n        gl.deleteTexture(texture);\n        gl.getExtension('WEBGL_lose_context')?.loseContext();\n\n        URL.revokeObjectURL(video.src);\n\n        return pixel[0] <= pixel[3] ? ALPHA_MODES.PMA : ALPHA_MODES.UNPACK;\n    })();\n\n    return promise;\n}\n"],"names":[],"mappings":";;;AAGA,IAAI,OAAA,CAAA;AAeJ,eAAsB,oBACtB,GAAA;AACI,EAAA,OAAA,KAAA,OAAA,GAAA,CAAa,YACb;AACI,IAAM,MAAA,MAAA,GAAS,QAAS,CAAA,OAAA,CAAQ,YAAa,EAAA,CAAA;AAC7C,IAAM,MAAA,EAAA,GAAK,MAAO,CAAA,UAAA,CAAW,OAAO,CAAA,CAAA;AAEpC,IAAA,IAAI,CAAC,EACL,EAAA;AACI,MAAA,OAAO,WAAY,CAAA,MAAA,CAAA;AAAA,KACvB;AAEA,IAAM,MAAA,KAAA,GAAQ,QAAS,CAAA,aAAA,CAAc,OAAO,CAAA,CAAA;AAE5C,IAAA,KAAA,CAAM,QAAW,GAAA,KAAA,CAAA;AACjB,IAAA,KAAA,CAAM,WAAc,GAAA,WAAA,CAAA;AACpB,IAAA,KAAA,CAAM,OAAU,GAAA,MAAA,CAAA;AAChB,IAAA,KAAA,CAAM,MAAM,GAAI,CAAA,eAAA,CAAgB,IAAI,IAAK,CAAA,CAAC,IAAI,UAAW,CAAA;AAAA,MACrD,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAC1F,CAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAC1F,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,GAAA;AAAA,MAC1F,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAC1F,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAC1F,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAAM,EAAA;AAAA,MAC1F,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAC1F,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,EAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAC1F,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAC1F,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAC1F,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAC1F,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAC1F,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAC1F,CAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAC1F,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAC1F,EAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAC1F,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAC1F,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAAM,GAAA;AAAA,MAC1F,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAC1F,CAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAC1F,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAC1F,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAC1F,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAC1F,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAC1F,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAC1F,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,CAAA;AAAA,MAC1F,CAAA;AAAA,MAAM,EAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,GAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAC1F,CAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,GAAA;AAAA,MAAM,EAAA;AAAA,MAAM,CAAA;AAAA,MAAM,CAAA;AAAA,MAAM,EAAA;AAAA,MAAM,CAAA;AAAA,MAA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"}